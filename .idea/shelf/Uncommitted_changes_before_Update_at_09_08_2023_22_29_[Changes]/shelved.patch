Index: app/src/main/java/com/example/meetyou/UploadPhotoActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.meetyou;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\nimport android.content.ContentResolver;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.ActivityInfo;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.webkit.MimeTypeMap;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.example.meetyou.Database.DatabaseHelper;\r\nimport com.example.meetyou.MYFiles.Users;\r\nimport com.example.meetyou.databinding.ActivityUploadPhotoBinding;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\n\r\npublic class UploadPhotoActivity extends AppCompatActivity {\r\n\r\n    private ImageView selectedImageView;\r\n\r\n    private StorageReference storageReference;\r\n\r\n    ActivityUploadPhotoBinding binding;\r\n    DatabaseHelper databaseHelper;\r\n\r\n    public Boolean firstUploaded = false;\r\n    public Boolean secondUploaded = false;\r\n    public Boolean thirdUploaded = false;\r\n    public Boolean fourthUploaded = false;\r\n    public Boolean fifthUploaded = false;\r\n\r\n    private String sPhoto1;\r\n    private String sPhoto2;\r\n    private String sPhoto3;\r\n    private String sPhoto4;\r\n    private String sPhoto5;\r\n\r\n    ImageView imageView1;\r\n    ImageView imageView2;\r\n    ImageView imageView3;\r\n    ImageView imageView4;\r\n    ImageView imageView5;\r\n\r\n    private byte[] photo1;\r\n    private byte[] photo2;\r\n    private byte[] photo3;\r\n    private byte[] photo4;\r\n    private byte[] photo5;\r\n\r\n    private final int GALLERY_REQ_CODE = 1000;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityUploadPhotoBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\r\n        storageReference = FirebaseStorage.getInstance().getReference();\r\n\r\n        getWindow().setStatusBarColor(ContextCompat.getColor(UploadPhotoActivity.this, R.color.main));\r\n\r\n        databaseHelper = new DatabaseHelper(this);\r\n\r\n        imageView1 = findViewById(R.id.image1);\r\n        imageView2 = findViewById(R.id.image2);\r\n        imageView3 = findViewById(R.id.image3);\r\n        imageView4 = findViewById(R.id.image4);\r\n        imageView5 = findViewById(R.id.image5);\r\n\r\n        binding.buttonUpload1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                selectedImageView = imageView1;\r\n                Intent iGallery = new Intent(Intent.ACTION_PICK);\r\n                iGallery.setData(MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                startActivityForResult(iGallery, GALLERY_REQ_CODE);\r\n            }\r\n        });\r\n\r\n\r\n\r\n        binding.buttonUpload2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                selectedImageView = imageView2;\r\n                Intent iGallery = new Intent(Intent.ACTION_PICK);\r\n                iGallery.setData(MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                startActivityForResult(iGallery, GALLERY_REQ_CODE);\r\n            }\r\n        });\r\n\r\n\r\n        binding.buttonUpload3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                selectedImageView = imageView3;\r\n                Intent iGallery = new Intent(Intent.ACTION_PICK);\r\n                iGallery.setData(MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                startActivityForResult(iGallery, GALLERY_REQ_CODE);\r\n            }\r\n        });\r\n\r\n\r\n        binding.buttonUpload4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                selectedImageView = imageView4;\r\n                Intent iGallery = new Intent(Intent.ACTION_PICK);\r\n                iGallery.setData(MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                startActivityForResult(iGallery, GALLERY_REQ_CODE);\r\n            }\r\n        });\r\n\r\n\r\n        binding.buttonUpload5.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                selectedImageView = imageView5;\r\n                Intent iGallery = new Intent(Intent.ACTION_PICK);\r\n                iGallery.setData(MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                startActivityForResult(iGallery, GALLERY_REQ_CODE);\r\n            }\r\n        });\r\n\r\n        binding.goNextButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (firstUploaded && secondUploaded && thirdUploaded && fourthUploaded && fifthUploaded) {\r\n                    Users.updateUserPhoto(getUID(), \"photo1\", sPhoto1);\r\n                    Users.updateUserPhoto(getUID(), \"photo2\", sPhoto2);\r\n                    Users.updateUserPhoto(getUID(), \"photo3\", sPhoto3);\r\n                    Users.updateUserPhoto(getUID(), \"photo4\", sPhoto4);\r\n                    Users.updateUserPhoto(getUID(), \"photo5\", sPhoto5);\r\n                    Intent intent = new Intent(UploadPhotoActivity.this, ChooseInterestsActivity.class);\r\n                    startActivity(intent);\r\n                } else {\r\n                    Toast.makeText(UploadPhotoActivity.this, R.string.upload_all_photos_message, Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n\r\n        binding.goBackButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (resultCode == RESULT_OK) {\r\n            if (requestCode == GALLERY_REQ_CODE) {\r\n                if (selectedImageView != null) {\r\n                    selectedImageView.setImageURI(data.getData());\r\n\r\n                    if (selectedImageView == imageView1) {\r\n                        photo1 = getByteArrayFromBitmap(((BitmapDrawable) selectedImageView.getDrawable()).getBitmap());\r\n                        saveImageToSharedPreferences(\"photo1\", photo1);\r\n                        uploadPhotoToFirebaseStorage(data.getData(), 1);\r\n                        firstUploaded = true;\r\n                    } else if (selectedImageView == imageView2) {\r\n                        photo2 = getByteArrayFromBitmap(((BitmapDrawable) selectedImageView.getDrawable()).getBitmap());\r\n                        saveImageToSharedPreferences(\"photo2\", photo2);\r\n                        uploadPhotoToFirebaseStorage(data.getData(), 2);\r\n                        secondUploaded = true;\r\n                    } else if (selectedImageView == imageView3) {\r\n                        photo3 = getByteArrayFromBitmap(((BitmapDrawable) selectedImageView.getDrawable()).getBitmap());\r\n                        saveImageToSharedPreferences(\"photo3\", photo3);\r\n                        uploadPhotoToFirebaseStorage(data.getData(), 3);\r\n                        thirdUploaded = true;\r\n                    } else if (selectedImageView == imageView4) {\r\n                        photo4 = getByteArrayFromBitmap(((BitmapDrawable) selectedImageView.getDrawable()).getBitmap());\r\n                        saveImageToSharedPreferences(\"photo4\", photo4);\r\n                        uploadPhotoToFirebaseStorage(data.getData(), 4);\r\n                        fourthUploaded = true;\r\n                    } else if (selectedImageView == imageView5) {\r\n                        photo5 = getByteArrayFromBitmap(((BitmapDrawable) selectedImageView.getDrawable()).getBitmap());\r\n                        saveImageToSharedPreferences(\"photo5\", photo5);\r\n                        uploadPhotoToFirebaseStorage(data.getData(), 5);\r\n                        fifthUploaded = true;\r\n                    }\r\n                    applyRoundedCorners(selectedImageView);\r\n                    checkAllPhotosUploaded();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private void applyRoundedCorners(ImageView imageView) {\r\n        Drawable originalDrawable = imageView.getDrawable();\r\n        if (originalDrawable == null) return;\r\n\r\n        Bitmap originalBitmap = ((BitmapDrawable) originalDrawable).getBitmap();\r\n        int cornerRadius = 150;\r\n        Bitmap roundedBitmap = getRoundedCornerBitmap(originalBitmap, cornerRadius);\r\n\r\n        imageView.setImageBitmap(roundedBitmap);\r\n    }\r\n\r\n    private Bitmap getRoundedCornerBitmap(Bitmap bitmap, int cornerRadius) {\r\n        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Bitmap.Config.ARGB_8888);\r\n        android.graphics.Canvas canvas = new android.graphics.Canvas(output);\r\n\r\n        final int color = 0xff424242;\r\n        final android.graphics.Paint paint = new android.graphics.Paint();\r\n        final android.graphics.Rect rect = new android.graphics.Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());\r\n        final android.graphics.RectF rectF = new android.graphics.RectF(rect);\r\n\r\n        paint.setAntiAlias(true);\r\n        canvas.drawARGB(0, 0, 0, 0);\r\n        paint.setColor(color);\r\n        canvas.drawRoundRect(rectF, cornerRadius, cornerRadius, paint);\r\n\r\n        paint.setXfermode(new android.graphics.PorterDuffXfermode(android.graphics.PorterDuff.Mode.SRC_IN));\r\n        canvas.drawBitmap(bitmap, rect, rect, paint);\r\n\r\n        return output;\r\n    }\r\n\r\n    private void checkAllPhotosUploaded() {\r\n        if (firstUploaded && secondUploaded && thirdUploaded && fourthUploaded && fifthUploaded) {\r\n            binding.goNextButton.setBackgroundResource(R.drawable.button_background_blue);\r\n            binding.goNextButton.setTextColor(ContextCompat.getColor(UploadPhotoActivity.this, android.R.color.white));\r\n        } else {\r\n            binding.goNextButton.setBackgroundResource(R.drawable.button_background_gray);\r\n            binding.goNextButton.setTextColor(ContextCompat.getColor(UploadPhotoActivity.this, R.color.neutral_dark_gray));\r\n        }\r\n    }\r\n\r\n\r\n    private byte[] getByteArrayFromBitmap(Bitmap bitmap) {\r\n        ByteArrayOutputStream stream = new ByteArrayOutputStream();\r\n        bitmap.compress(Bitmap.CompressFormat.PNG, 100, stream);\r\n        return stream.toByteArray();\r\n    }\r\n\r\n    private void saveImageToSharedPreferences(String key, byte[] imageData) {\r\n        String base64Image = Base64.encodeToString(imageData, Base64.DEFAULT);\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(key, base64Image);\r\n        editor.apply();\r\n    }\r\n\r\n    private void uploadPhotoToFirebaseStorage(Uri photoUri, int number) {\r\n        String UID = getUID();\r\n\r\n        if (UID == null) {\r\n            Log.e(TAG, \"UID is 0, cannot upload photo to Firebase Storage.\");\r\n            return;\r\n        }\r\n\r\n        String folderName = UID;\r\n        StorageReference folderRef = storageReference.child(folderName);\r\n\r\n        String fileExtension = getFileExtension(photoUri);\r\n        String uniqueFileName = \"photo\" + number + \".\" + fileExtension;\r\n\r\n        StorageReference photoRef = folderRef.child(uniqueFileName);\r\n\r\n        photoRef.putFile(photoUri)\r\n                .addOnSuccessListener(taskSnapshot -> {\r\n                    // Photo upload success\r\n                    photoRef.getDownloadUrl().addOnSuccessListener(uri -> {\r\n                        String photoUrl = uri.toString();\r\n                        // Сохраняем URL (Access token) изображения в соответствующую переменную\r\n                        switch (number) {\r\n                            case 1:\r\n                                sPhoto1 = photoUrl;\r\n                                break;\r\n                            case 2:\r\n                                sPhoto2 = photoUrl;\r\n                                break;\r\n                            case 3:\r\n                                sPhoto3 = photoUrl;\r\n                                break;\r\n                            case 4:\r\n                                sPhoto4 = photoUrl;\r\n                                break;\r\n                            case 5:\r\n                                sPhoto5 = photoUrl;\r\n                                break;\r\n                        }\r\n                        // Также можно сохранить URL (Access token) изображения в SharedPreferences, если это требуется\r\n                        savePhotoUrlToSharedPreferences(\"photoUrl\" + number, photoUrl);\r\n                    });\r\n                })\r\n                .addOnFailureListener(exception -> {\r\n                    // Error occurred while uploading the photo\r\n                    Log.e(TAG, \"Error uploading photo to Firebase Storage: \" + exception.getMessage());\r\n                });\r\n    }\r\n\r\n    private void savePhotoUrlToSharedPreferences(String key, String photoUrl) {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(key, photoUrl);\r\n        editor.apply();\r\n    }\r\n\r\n    private String getFileExtension(Uri uri) {\r\n        ContentResolver contentResolver = getContentResolver();\r\n        MimeTypeMap mimeTypeMap = MimeTypeMap.getSingleton();\r\n        return mimeTypeMap.getExtensionFromMimeType(contentResolver.getType(uri));\r\n    }\r\n\r\n    private String getUID() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"UID\", \"\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/meetyou/UploadPhotoActivity.java b/app/src/main/java/com/example/meetyou/UploadPhotoActivity.java
--- a/app/src/main/java/com/example/meetyou/UploadPhotoActivity.java	(revision c96a8406b8a0d8959280eeb4b5e574db9509bf17)
+++ b/app/src/main/java/com/example/meetyou/UploadPhotoActivity.java	(date 1691521307398)
@@ -275,6 +275,10 @@
         StorageReference folderRef = storageReference.child(folderName);
 
         String fileExtension = getFileExtension(photoUri);
+        if (!fileExtension.equalsIgnoreCase("jpg")) {
+            // Если формат не jpg, меняем его на jpg
+            fileExtension = "jpg";
+        }
         String uniqueFileName = "photo" + number + "." + fileExtension;
 
         StorageReference photoRef = folderRef.child(uniqueFileName);
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_08_2023_0_37_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_08_2023_0_37_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_02_08_2023_0_37_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_02_08_2023_0_37_[Changes]/shelved.patch	(revision c96a8406b8a0d8959280eeb4b5e574db9509bf17)
+++ /dev/null	(revision c96a8406b8a0d8959280eeb4b5e574db9509bf17)
@@ -1,45 +0,0 @@
-Index: app/src/main/java/com/example/meetyou/OwnProfileActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.meetyou;\r\n\r\nimport android.Manifest;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.os.Bundle;\r\nimport android.util.Base64;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.example.meetyou.MYFiles.Users;\r\nimport com.example.meetyou.databinding.ActivityOwnProfileBinding;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.io.IOException;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class OwnProfileActivity extends AppCompatActivity {\r\n    public String photo1URL;\r\n    public String photo2URL;\r\n    public String photo3URL;\r\n    public String photo4URL;\r\n    public String photo5URL;\r\n    private LocationManager locationManager;\r\n    private LocationListener locationListener;\r\n\r\n    // Объект для привязки макета активности\r\n    ActivityOwnProfileBinding binding;\r\n\r\n    private DatabaseReference mDatabase;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        // Привязка макета активности\r\n        binding = ActivityOwnProfileBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        // Установка цвета статус-бара\r\n        getWindow().setStatusBarColor(ContextCompat.getColor(OwnProfileActivity.this, R.color.main));\r\n\r\n        // Получение данных пользователя и отображение их в представлении\r\n        String nameText = getUserName() + \", \" + Integer.toString(getUserAge());\r\n        binding.nameTextView.setText(nameText);\r\n        binding.additionalTextView.setText(getUserBio());\r\n\r\n        // Чтение данных из Firebase Database и передача в локальные переменные\r\n        Users.getUserDataFromFirebase(getUID(), new Users.OnUserDataListener() {\r\n            @Override\r\n            public void onDataLoaded(Users user) {\r\n                // Здесь можно использовать значения photo1, photo2, photo3, photo4, photo5\r\n                photo1URL = user.getPhoto1();\r\n                photo2URL = user.getPhoto2();\r\n                photo3URL = user.getPhoto3();\r\n                photo4URL = user.getPhoto4();\r\n                photo5URL = user.getPhoto5();\r\n            }\r\n\r\n            @Override\r\n            public void onDataNotAvailable() {\r\n                // Обработка случая, если данные не удалось загрузить\r\n            }\r\n        });\r\n\r\n        customPhotoLoadingToClient(\"photo1\", binding.profilePhoto);\r\n        customPhotoLoadingToClient(\"photo1\", binding.image1);\r\n        customPhotoLoadingToClient(\"photo2\", binding.image2);\r\n        customPhotoLoadingToClient(\"photo3\", binding.image3);\r\n        customPhotoLoadingToClient(\"photo4\", binding.image4);\r\n        customPhotoLoadingToClient(\"photo5\", binding.image5);\r\n\r\n//        Glide.with(getApplicationContext()).load(photo1URL).into(binding.profilePhoto);\r\n//        Glide.with(getApplicationContext()).load(photo1URL).into(binding.image1);\r\n//        Glide.with(getApplicationContext()).load(photo2URL).into(binding.image2);\r\n//        Glide.with(getApplicationContext()).load(photo3URL).into(binding.image3);\r\n//        Glide.with(getApplicationContext()).load(photo4URL).into(binding.image4);\r\n//        Glide.with(getApplicationContext()).load(photo5URL).into(binding.image5);\r\n\r\n\r\n        // Обработчик кнопки \"Настройки\", переход к активности OptionsActivity\r\n        binding.settingButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(OwnProfileActivity.this, OptionsActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        // Обработчик кнопки \"Найти\", переход к активности MainActivity и завершение текущей активности\r\n        binding.findButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(OwnProfileActivity.this, MainActivity.class);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        // Получение LocationManager и установка слушателя для обновления местоположения\r\n        locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n        locationListener = new LocationListener() {\r\n            @Override\r\n            public void onLocationChanged(Location location) {\r\n                updateLocationTextView(location);\r\n            }\r\n\r\n            @Override\r\n            public void onStatusChanged(String provider, int status, Bundle extras) {\r\n                // Метод вызывается при изменении статуса провайдера (GPS или сеть)\r\n            }\r\n\r\n            @Override\r\n            public void onProviderEnabled(String provider) {\r\n                // Метод вызывается, когда пользователь включает провайдер (GPS или сеть)\r\n            }\r\n\r\n            @Override\r\n            public void onProviderDisabled(String provider) {\r\n                // Метод вызывается, когда пользователь отключает провайдер (GPS или сеть)\r\n            }\r\n        };\r\n\r\n        // Проверка наличия разрешения на доступ к местоположению, и запрос разрешения, если требуется\r\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 1);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n\r\n        // Проверка, были ли внесены изменения, и пересоздание активности для их отображения\r\n        if (getChanges()) {\r\n            setSomethingWasChanged(false);\r\n            recreate();\r\n        }\r\n\r\n        // Проверка наличия разрешения на доступ к местоположению и запрос обновлений местоположения\r\n        if (locationManager != null) {\r\n            if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\r\n                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 10, locationListener);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        // Остановка обновлений местоположения при остановке активности\r\n        if (locationManager != null) {\r\n            locationManager.removeUpdates(locationListener);\r\n        }\r\n    }\r\n\r\n    // Обновление текстового представления с местоположением\r\n    private void updateLocationTextView(Location location) {\r\n        if (location != null) {\r\n            double latitude = location.getLatitude();\r\n            double longitude = location.getLongitude();\r\n\r\n            Geocoder geocoder = new Geocoder(this, Locale.getDefault());\r\n            try {\r\n                List<Address> addresses = geocoder.getFromLocation(latitude, longitude, 1);\r\n                if (!addresses.isEmpty()) {\r\n                    String country = addresses.get(0).getCountryName();\r\n                    String city = addresses.get(0).getLocality();\r\n                    String locationString = country + \", \" + city;\r\n                    binding.locationTextView.setText(locationString);\r\n                }\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Методы для получения данных пользователя из SharedPreferences\r\n    private String getUserBio() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"bio\", \"\");\r\n    }\r\n\r\n    private int getUserAge() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", Context.MODE_PRIVATE);\r\n        return sharedPreferences.getInt(\"age\", 0);\r\n    }\r\n\r\n    private String getUserName() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"name\", \"\");\r\n    }\r\n\r\n    private boolean getChanges() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getBoolean(\"isSomethingWasChanged\", false);\r\n    }\r\n\r\n    // Преобразование закодированного изображения в Bitmap\r\n    private Bitmap getImageBitmapFromSharedPreferences(String key) {\r\n        byte[] imageByteArray = getImageFromSharedPreferences(key);\r\n        if (imageByteArray != null) {\r\n            return BitmapFactory.decodeByteArray(imageByteArray, 0, imageByteArray.length);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Получение закодированного изображения из SharedPreferences\r\n    private byte[] getImageFromSharedPreferences(String key) {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        String base64Image = sharedPreferences.getString(key, null);\r\n        if (base64Image != null) {\r\n            return Base64.decode(base64Image, Base64.DEFAULT);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Установка флага, указывающего на наличие изменений\r\n    private void setSomethingWasChanged(boolean parameter) {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putBoolean(\"isSomethingWasChanged\", parameter);\r\n        editor.apply();\r\n    }\r\n\r\n    private void customPhotoLoadingToClient(String photoName, ImageView imageView){\r\n        DatabaseReference Images = FirebaseDatabase.getInstance().getReference(\"Users\").child(getUID()).child(photoName);\r\n        Images.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                String value = snapshot.getValue(String.class);\r\n                Picasso.get().load(value).into(imageView);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private String getUID() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"UID\", \"\");\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/meetyou/OwnProfileActivity.java b/app/src/main/java/com/example/meetyou/OwnProfileActivity.java
---- a/app/src/main/java/com/example/meetyou/OwnProfileActivity.java	(revision e265ba0b9503d218e1e2f0a00ce653bad3c0d141)
-+++ b/app/src/main/java/com/example/meetyou/OwnProfileActivity.java	(date 1690925812900)
-@@ -61,7 +61,8 @@
-         getWindow().setStatusBarColor(ContextCompat.getColor(OwnProfileActivity.this, R.color.main));
- 
-         // Получение данных пользователя и отображение их в представлении
--        String nameText = getUserName() + ", " + Integer.toString(getUserAge());
-+        int userAge = getUserAge();
-+        String nameText = getUserName() + ", " + (Integer.toString(userAge));
-         binding.nameTextView.setText(nameText);
-         binding.additionalTextView.setText(getUserBio());
- 
-Index: .idea/deploymentTargetDropDown.xml
-===================================================================
-diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
-deleted file mode 100644
---- a/.idea/deploymentTargetDropDown.xml	(revision e265ba0b9503d218e1e2f0a00ce653bad3c0d141)
-+++ /dev/null	(revision e265ba0b9503d218e1e2f0a00ce653bad3c0d141)
-@@ -1,17 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<project version="4">
--  <component name="deploymentTargetDropDown">
--    <runningDeviceTargetSelectedWithDropDown>
--      <Target>
--        <type value="RUNNING_DEVICE_TARGET" />
--        <deviceKey>
--          <Key>
--            <type value="VIRTUAL_DEVICE_PATH" />
--            <value value="C:\Users\fajar\.android\avd\Pixel_3a_API_34_extension_level_7_x86_64.avd" />
--          </Key>
--        </deviceKey>
--      </Target>
--    </runningDeviceTargetSelectedWithDropDown>
--    <timeTargetWasSelectedWithDropDown value="2023-08-01T19:24:24.868898200Z" />
--  </component>
--</project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_08_2023_0_37__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_08_2023_0_37__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_02_08_2023_0_37__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_02_08_2023_0_37__Changes_.xml	(revision c96a8406b8a0d8959280eeb4b5e574db9509bf17)
+++ /dev/null	(revision c96a8406b8a0d8959280eeb4b5e574db9509bf17)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_02_08_2023_0_37_[Changes]" date="1690925863353" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_08_2023_0_37_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 02.08.2023 0:37 [Changes]" />
-</changelist>
\ No newline at end of file
