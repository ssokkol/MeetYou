Index: app/src/main/java/com/example/meetyou/MYFiles/Users.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.meetyou.MYFiles;\r\n\r\nimport android.content.Context;\r\nimport android.content.SharedPreferences;\r\n\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\npublic class Users {\r\n    String UID, email, name, bio, height, weight, gender, findGender, findHeight, findWeight, hobbies, target, color, status, photo1, photo2, photo3, photo4, photo5;\r\n    int age, boosts, likes, megasymps;\r\n\r\n    boolean verified;\r\n\r\n    public Users() {\r\n    }\r\n\r\n    public Users(String UID, String email, String name, String bio, String height, String weight, String gender, String findGender, String findHeight, String findWeight, String hobbies, String target,\r\n                 String color, String status,\r\n                 String photo1, String photo2, String photo3, String photo4, int age, int boosts, int likes, int megasymps, boolean verified)\r\n    {\r\n        this.UID = UID;\r\n        this.email = email;\r\n        this.name = name;\r\n        this.bio = bio;\r\n        this.height = height;\r\n        this.weight = weight;\r\n        this.gender = gender;\r\n        this.findGender = findGender;\r\n        this.findHeight = findHeight;\r\n        this.findWeight = findWeight;\r\n        this.hobbies = hobbies;\r\n        this.target = target;\r\n        this.color = color;\r\n        this.status = status;\r\n        this.photo1 = photo1;\r\n        this.photo2 = photo2;\r\n        this.photo3 = photo3;\r\n        this.photo4 = photo4;\r\n        this.photo5 = photo5;\r\n        this.age = age;\r\n        this.boosts = boosts;\r\n        this.likes = likes;\r\n        this.megasymps = megasymps;\r\n        this.verified = verified;\r\n    }\r\n\r\n    public String getFindHeight() {\r\n        return findHeight;\r\n    }\r\n\r\n    public void setFindHeight(String findHeight) {\r\n        this.findHeight = findHeight;\r\n    }\r\n\r\n    public String getFindWeight() {\r\n        return findWeight;\r\n    }\r\n\r\n    public void setFindWeight(String findWeight) {\r\n        this.findWeight = findWeight;\r\n    }\r\n\r\n    public String getPhoto1() {\r\n        return photo1;\r\n    }\r\n\r\n    public void setPhoto1(String photo1) {\r\n        this.photo1 = photo1;\r\n    }\r\n\r\n    public String getPhoto2() {\r\n        return photo2;\r\n    }\r\n\r\n    public void setPhoto2(String photo2) {\r\n        this.photo2 = photo2;\r\n    }\r\n\r\n    public String getPhoto3() {\r\n        return photo3;\r\n    }\r\n\r\n    public void setPhoto3(String photo3) {\r\n        this.photo3 = photo3;\r\n    }\r\n\r\n    public String getPhoto4() {\r\n        return photo4;\r\n    }\r\n\r\n    public void setPhoto4(String photo4) {\r\n        this.photo4 = photo4;\r\n    }\r\n\r\n    public String getPhoto5() {\r\n        return photo5;\r\n    }\r\n\r\n    public void setPhoto5(String photo5) {\r\n        this.photo5 = photo5;\r\n    }\r\n\r\n    public int getBoosts() {\r\n        return boosts;\r\n    }\r\n\r\n    public void setBoosts(int boosts) {\r\n        this.boosts = boosts;\r\n    }\r\n\r\n    public int getLikes() {\r\n        return likes;\r\n    }\r\n\r\n    public void setLikes(int likes) {\r\n        this.likes = likes;\r\n    }\r\n\r\n    public int getMegasymps() {\r\n        return megasymps;\r\n    }\r\n\r\n    public void setMegasymps(int megasymps) {\r\n        this.megasymps = megasymps;\r\n    }\r\n\r\n    public boolean isVerified() {\r\n        return verified;\r\n    }\r\n\r\n    public void setVerified(boolean verified) {\r\n        this.verified = verified;\r\n    }\r\n\r\n    public String getColor() {\r\n        return color;\r\n    }\r\n\r\n    public void setColor(String color) {\r\n        this.color = color;\r\n    }\r\n\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(String status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public String getUID() {\r\n        return UID;\r\n    }\r\n\r\n    public void setUID(String UID) {\r\n        this.UID = UID;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getBio() {\r\n        return bio;\r\n    }\r\n\r\n    public void setBio(String bio) {\r\n        this.bio = bio;\r\n    }\r\n\r\n    public String getHeight() {\r\n        return height;\r\n    }\r\n\r\n    public void setHeight(String height) {\r\n        this.height = height;\r\n    }\r\n\r\n    public String getWeight() {\r\n        return weight;\r\n    }\r\n\r\n    public void setWeight(String weight) {\r\n        this.weight = weight;\r\n    }\r\n\r\n    public String getGender() {\r\n        return gender;\r\n    }\r\n\r\n    public void setGender(String gender) {\r\n        this.gender = gender;\r\n    }\r\n\r\n    public String getFindGender() {\r\n        return findGender;\r\n    }\r\n\r\n    public void setFindGender(String findGender) {\r\n        this.findGender = findGender;\r\n    }\r\n\r\n    public String getHobbies() {\r\n        return hobbies;\r\n    }\r\n\r\n    public void setHobbies(String hobbies) {\r\n        this.hobbies = hobbies;\r\n    }\r\n\r\n    public String getTarget() {\r\n        return target;\r\n    }\r\n\r\n    public void setTarget(String target) {\r\n        this.target = target;\r\n    }\r\n\r\n    public int getAge() {\r\n        return age;\r\n    }\r\n\r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n\r\n    public static void updateUserName(String UID, String newName) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"name\");\r\n        userRef.setValue(newName);\r\n    }\r\n\r\n    public static void updateUserBio(String UID, String newBio) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"bio\");\r\n        userRef.setValue(newBio);\r\n    }\r\n\r\n    public static void updateUserHeight(String UID, String newHeight) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"height\");\r\n        userRef.setValue(newHeight);\r\n    }\r\n\r\n    public static void updateUserWeight(String UID, String newWeight) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"weight\");\r\n        userRef.setValue(newWeight);\r\n    }\r\n\r\n    public static void updateUserGender(String UID, String newGender) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"gender\");\r\n        userRef.setValue(newGender);\r\n    }\r\n\r\n    public static void updateUserFindGender(String UID, String newFindGender) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"findGender\");\r\n        userRef.setValue(newFindGender);\r\n    }\r\n\r\n    public static void updateUserHobbies(String UID, String newHobbies) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"hobbies\");\r\n        userRef.setValue(newHobbies);\r\n    }\r\n\r\n    public static void updateUserTarget(String UID, String newTarget) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"target\");\r\n        userRef.setValue(newTarget);\r\n    }\r\n\r\n    public static void updateUserColor(String UID, String newColor) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"color\");\r\n        userRef.setValue(newColor);\r\n    }\r\n\r\n    public static void updateUserStatus(String UID, String newStatus) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"status\");\r\n        userRef.setValue(newStatus);\r\n    }\r\n\r\n    public static void updateUserAge(String UID, int newAge) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"age\");\r\n        userRef.setValue(newAge);\r\n    }\r\n\r\n    public static void updateVerification(String UID, boolean newVerification){\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"verified\");\r\n        userRef.setValue(newVerification);\r\n    }\r\n\r\n\r\n    public static void updateUserPhoto(String UID, String photoName,String photoURL){\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(photoName);\r\n        userRef.setValue(photoURL);\r\n    }\r\n\r\n\r\n    public static void updateUserFindHeight(String UID, String newFindHeight) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"findHeight\");\r\n        userRef.setValue(newFindHeight);\r\n    }\r\n\r\n    public static void updateUserFindWeight(String UID, String newFindWeight) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"findHeight\");\r\n        userRef.setValue(newFindWeight);\r\n    }\r\n\r\n    public static void getUserDataFromFirebase(String UID, final OnUserDataListener listener) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID);\r\n        userRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(DataSnapshot dataSnapshot) {\r\n                Users user = dataSnapshot.getValue(Users.class);\r\n                if (user != null) {\r\n                    listener.onDataLoaded(user);\r\n                } else {\r\n                    listener.onDataNotAvailable();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(DatabaseError databaseError) {\r\n                listener.onDataNotAvailable();\r\n            }\r\n        });\r\n    }\r\n\r\n    public interface OnUserDataListener {\r\n        void onDataLoaded(String userName);\r\n\r\n        void onDataLoaded(Users user);\r\n        void onDataNotAvailable();\r\n    }\r\n\r\n    public void saveUserDataToSharedPreferences(Context context) {\r\n        SharedPreferences sharedPreferences = context.getSharedPreferences(\"UserPrefs\", Context.MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"UID\", this.UID);\r\n        editor.putString(\"name\", this.name);\r\n        editor.putString(\"bio\", this.bio);\r\n        editor.putString(\"height\", this.height);\r\n        editor.putString(\"weight\", this.weight);\r\n        editor.putString(\"gender\", this.gender);\r\n        editor.putString(\"findGender\", this.findGender);\r\n        editor.putString(\"findHeight\", this.findHeight);\r\n        editor.putString(\"findWeight\", this.findWeight);\r\n        editor.putString(\"hobbies\", this.hobbies);\r\n        editor.putString(\"target\", this.target);\r\n        editor.putString(\"color\", this.color);\r\n        editor.putString(\"status\", this.status);\r\n        editor.putString(\"photo1\", this.photo1);\r\n        editor.putString(\"photo2\", this.photo2);\r\n        editor.putString(\"photo3\", this.photo3);\r\n        editor.putString(\"photo4\", this.photo4);\r\n        editor.putString(\"photo5\", this.photo5);\r\n        editor.putInt(\"age\", this.age);\r\n        editor.putInt(\"boosts\", this.boosts);\r\n        editor.putInt(\"likes\", this.likes);\r\n        editor.putInt(\"megasymps\", this.megasymps);\r\n        editor.putBoolean(\"verified\", this.verified);\r\n        editor.apply();\r\n    }\r\n\r\n    public static Users getUserDataFromSharedPreferences(Context context) {\r\n        SharedPreferences sharedPreferences = context.getSharedPreferences(\"UserPrefs\", Context.MODE_PRIVATE);\r\n        String UID = sharedPreferences.getString(\"UID\", \"\");\r\n        String name = sharedPreferences.getString(\"name\", \"\");\r\n        String bio = sharedPreferences.getString(\"bio\", \"\");\r\n        String height = sharedPreferences.getString(\"height\", \"\");\r\n        String weight = sharedPreferences.getString(\"weight\", \"\");\r\n        String gender = sharedPreferences.getString(\"gender\", \"\");\r\n        String findGender = sharedPreferences.getString(\"findGender\", \"\");\r\n        String findHeight = sharedPreferences.getString(\"findHeight\", \"\");\r\n        String findWeight = sharedPreferences.getString(\"findWeight\", \"\");\r\n        String hobbies = sharedPreferences.getString(\"hobbies\", \"\");\r\n        String target = sharedPreferences.getString(\"target\", \"\");\r\n        String color = sharedPreferences.getString(\"color\", \"\");\r\n        String status = sharedPreferences.getString(\"status\", \"\");\r\n        String photo1 = sharedPreferences.getString(\"photo1\", \"\");\r\n        String photo2 = sharedPreferences.getString(\"photo2\", \"\");\r\n        String photo3 = sharedPreferences.getString(\"photo3\", \"\");\r\n        String photo4 = sharedPreferences.getString(\"photo4\", \"\");\r\n        String photo5 = sharedPreferences.getString(\"photo5\", \"\");\r\n        int age = sharedPreferences.getInt(\"age\", 0);\r\n        int boosts = sharedPreferences.getInt(\"boosts\", 0);\r\n        int likes = sharedPreferences.getInt(\"likes\", 0);\r\n        int megasymps = sharedPreferences.getInt(\"megasymps\", 0);\r\n        boolean verified = sharedPreferences.getBoolean(\"verified\", false);\r\n\r\n        return new Users(UID, name, bio, height, weight, gender, findGender, findHeight, findHeight, hobbies, target, color, status, photo1, photo2, photo3, photo4, photo5, age, boosts, likes, megasymps, verified);\r\n    }\r\n\r\n\r\n\r\n    public static void getRandomUserFromPool(String UID,String findGender, String gender, final OnUserDataListener listener) {\r\n        DatabaseReference usersRef = FirebaseDatabase.getInstance().getReference(\"Users\");\r\n        Query query = usersRef.orderByChild(\"gender\").equalTo(gender);\r\n\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(DataSnapshot dataSnapshot) {\r\n                List<Users> femaleUsers = new ArrayList<>();\r\n                for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                    Users user = snapshot.getValue(Users.class);\r\n                    if (user != null && user.getFindGender().equals(findGender)) {\r\n                        femaleUsers.add(user);\r\n                    }\r\n                }\r\n\r\n                if (!femaleUsers.isEmpty()) {\r\n                    int randomIndex = new Random().nextInt(femaleUsers.size());\r\n                    Users randomFemaleUser = femaleUsers.get(randomIndex);\r\n                    listener.onDataLoaded(randomFemaleUser.getName());\r\n                } else {\r\n                    listener.onDataNotAvailable();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(DatabaseError databaseError) {\r\n                listener.onDataNotAvailable();\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/meetyou/MYFiles/Users.java b/app/src/main/java/com/example/meetyou/MYFiles/Users.java
--- a/app/src/main/java/com/example/meetyou/MYFiles/Users.java	
+++ b/app/src/main/java/com/example/meetyou/MYFiles/Users.java	
@@ -20,13 +20,12 @@
 
     boolean verified;
 
-    public Users() {
+    public Users(String UID, String name, String bio, String height, String weight, String gender, String findGender, String findHeight, String s, String hobbies, String target, String color, String status, String photo1, String photo2, String photo3, String photo4, String photo5, int age, int boosts, int likes, int megasymps, boolean verified) {
     }
 
-    public Users(String UID, String email, String name, String bio, String height, String weight, String gender, String findGender, String findHeight, String findWeight, String hobbies, String target,
+    public Users(String UID, String email, String name, String bio, String height, String weight, String gender, String findGender, String hobbies, String target,
                  String color, String status,
-                 String photo1, String photo2, String photo3, String photo4, int age, int boosts, int likes, int megasymps, boolean verified)
-    {
+                 String photo1, String photo2, String photo3, String photo4, int age, int boosts, int likes, int megasymps, boolean verified) {
         this.UID = UID;
         this.email = email;
         this.name = name;
@@ -177,6 +176,8 @@
         return name;
     }
 
+
+
     public void setName(String name) {
         this.name = name;
     }
@@ -300,13 +301,13 @@
         userRef.setValue(newAge);
     }
 
-    public static void updateVerification(String UID, boolean newVerification){
+    public static void updateVerification(String UID, boolean newVerification) {
         DatabaseReference userRef = FirebaseDatabase.getInstance().getReference("Users").child(UID).child("verified");
         userRef.setValue(newVerification);
     }
 
 
-    public static void updateUserPhoto(String UID, String photoName,String photoURL){
+    public static void updateUserPhoto(String UID, String photoName, String photoURL) {
         DatabaseReference userRef = FirebaseDatabase.getInstance().getReference("Users").child(UID).child(photoName);
         userRef.setValue(photoURL);
     }
@@ -346,36 +347,52 @@
         void onDataLoaded(String userName);
 
         void onDataLoaded(Users user);
+
         void onDataNotAvailable();
     }
 
-    public void saveUserDataToSharedPreferences(Context context) {
-        SharedPreferences sharedPreferences = context.getSharedPreferences("UserPrefs", Context.MODE_PRIVATE);
-        SharedPreferences.Editor editor = sharedPreferences.edit();
-        editor.putString("UID", this.UID);
-        editor.putString("name", this.name);
-        editor.putString("bio", this.bio);
-        editor.putString("height", this.height);
-        editor.putString("weight", this.weight);
-        editor.putString("gender", this.gender);
-        editor.putString("findGender", this.findGender);
-        editor.putString("findHeight", this.findHeight);
-        editor.putString("findWeight", this.findWeight);
-        editor.putString("hobbies", this.hobbies);
-        editor.putString("target", this.target);
-        editor.putString("color", this.color);
-        editor.putString("status", this.status);
-        editor.putString("photo1", this.photo1);
-        editor.putString("photo2", this.photo2);
-        editor.putString("photo3", this.photo3);
-        editor.putString("photo4", this.photo4);
-        editor.putString("photo5", this.photo5);
-        editor.putInt("age", this.age);
-        editor.putInt("boosts", this.boosts);
-        editor.putInt("likes", this.likes);
-        editor.putInt("megasymps", this.megasymps);
-        editor.putBoolean("verified", this.verified);
-        editor.apply();
+    public static void saveUserDataToSharedPreferences(Context context, String UID) {
+        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference("Users").child(UID);
+        userRef.addListenerForSingleValueEvent(new ValueEventListener() {
+            @Override
+            public void onDataChange(DataSnapshot dataSnapshot) {
+                Users user = dataSnapshot.getValue(Users.class);
+
+                if (user != null) {
+                    SharedPreferences sharedPreferences = context.getSharedPreferences("UserPrefs", Context.MODE_PRIVATE);
+                    SharedPreferences.Editor editor = sharedPreferences.edit();
+                    editor.putString("UID", user.getUID());
+                    editor.putString("name", user.getName());
+                    editor.putString("bio", user.getBio());
+                    editor.putString("height", user.getHeight());
+                    editor.putString("weight", user.getWeight());
+                    editor.putString("gender", user.getGender());
+                    editor.putString("findGender", user.getFindGender());
+                    editor.putString("findHeight", user.getFindHeight());
+                    editor.putString("findWeight", user.getFindWeight());
+                    editor.putString("hobbies", user.getHobbies());
+                    editor.putString("target", user.getTarget());
+                    editor.putString("color", user.getColor());
+                    editor.putString("status", user.getStatus());
+                    editor.putString("photo1", user.getPhoto1());
+                    editor.putString("photo2", user.getPhoto2());
+                    editor.putString("photo3", user.getPhoto3());
+                    editor.putString("photo4", user.getPhoto4());
+                    editor.putString("photo5", user.getPhoto5());
+                    editor.putInt("age", user.getAge());
+                    editor.putInt("boosts", user.getBoosts());
+                    editor.putInt("likes", user.getLikes());
+                    editor.putInt("megasymps", user.getMegasymps());
+                    editor.putBoolean("verified", user.isVerified());
+                    editor.apply();
+                } else {
+                }
+            }
+
+            @Override
+            public void onCancelled(DatabaseError databaseError) {
+            }
+        });
     }
 
     public static Users getUserDataFromSharedPreferences(Context context) {
@@ -408,8 +425,7 @@
     }
 
 
-
-    public static void getRandomUserFromPool(String UID,String findGender, String gender, final OnUserDataListener listener) {
+    public static void getRandomUserFromPool(String UID, String findGender, String gender, String weight, String height, String findHeight, String findWeight, int age, int findMinAge, int findMaxAge, final OnUserDataListener listener) {
         DatabaseReference usersRef = FirebaseDatabase.getInstance().getReference("Users");
         Query query = usersRef.orderByChild("gender").equalTo(gender);
 
@@ -419,15 +435,21 @@
                 List<Users> femaleUsers = new ArrayList<>();
                 for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
                     Users user = snapshot.getValue(Users.class);
-                    if (user != null && user.getFindGender().equals(findGender)) {
-                        femaleUsers.add(user);
+                    if (user.getFindGender().equals("Any")){
+                        if (user != null && user.getWeight().equals(findWeight) && user.getHeight().equals(findHeight) && user.getAge() >= findMinAge && user.getAge() <= findMaxAge) {
+                            femaleUsers.add(user);
+                        }
+                    }else {
+                        if (user != null && user.getFindGender().equals(gender) && user.getWeight().equals(findWeight) && user.getHeight().equals(findHeight) && user.getAge() >= findMinAge && user.getAge() <= findMaxAge) {
+                            femaleUsers.add(user);
+                        }
                     }
                 }
 
                 if (!femaleUsers.isEmpty()) {
                     int randomIndex = new Random().nextInt(femaleUsers.size());
                     Users randomFemaleUser = femaleUsers.get(randomIndex);
-                    listener.onDataLoaded(randomFemaleUser.getName());
+                    listener.onDataLoaded(randomFemaleUser.getName(),randomFemaleUser.getBio(),randomFemaleUser.getPhoto1(),randomFemaleUser.getPhoto2(),randomFemaleUser.getPhoto3(),randomFemaleUser.getPhoto4(),randomFemaleUser.getPhoto5());
                 } else {
                     listener.onDataNotAvailable();
                 }
Index: app/src/main/java/com/example/meetyou/SignInActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.meetyou;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.ActivityInfo;\r\nimport android.os.Bundle;\r\nimport android.util.Patterns;\r\nimport android.view.View;\r\nimport android.widget.CheckBox;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.example.meetyou.Database.DatabaseHelper;\r\nimport com.example.meetyou.MYFiles.NotificationHelper;\r\nimport com.example.meetyou.MYFiles.Users;\r\nimport com.example.meetyou.databinding.ActivitySignInBinding;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\npublic class SignInActivity extends AppCompatActivity {\r\n\r\n    // Подключение привязки к макету активности\r\n    ActivitySignInBinding binding;\r\n\r\n    // Переменная для работы с базой данных\r\n    DatabaseHelper databaseHelper;\r\n\r\n    // Флаг для запоминания пользователя (опциональный выбор)\r\n    private CheckBox rememberMeCheckbox;\r\n\r\n    // Флаг, отмечающий состояние \"Запомнить меня\"\r\n    boolean isRememberMeChecked = false;\r\n\r\n    // Объект для аутентификации через Firebase\r\n    private FirebaseAuth mAuth;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivitySignInBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        // Получение состояния флага \"Запомнить меня\" из SharedPreferences\r\n        rememberMeCheckbox = findViewById(R.id.remember_me_checkbox);\r\n        isRememberMeChecked = isRememberMeChecked(); // Retrieve the value from SharedPreferences\r\n        rememberMeCheckbox.setChecked(isRememberMeChecked); // Set the state of the RememberMeCheckbox\r\n        if (isRememberMeChecked) {\r\n            // If the flag is set, attempt login with saved credentials\r\n            loginUser(getSavedEmail(), getSavedPassword());\r\n        }\r\n\r\n        // Установка портретной ориентации экрана\r\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\r\n\r\n        // Инициализация помощника для работы с базой данных\r\n        databaseHelper = new DatabaseHelper(this);\r\n\r\n        // Получение экземпляра Firebase для аутентификации\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        // Изменение цвета статус-бара\r\n        getWindow().setStatusBarColor(ContextCompat.getColor(SignInActivity.this, R.color.main));\r\n\r\n        // Обработчик кнопки \"Назад\" - закрывает активность\r\n        AppCompatButton backButton = findViewById(R.id.go_back_button);\r\n        backButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n        // Обработчик кнопки \"Войти\" - выполняет попытку входа\r\n        binding.signInButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // Получение введенной пользователем электронной почты и пароля\r\n                String email = binding.mailText.getText().toString().trim();\r\n                String password = binding.password.getText().toString();\r\n\r\n                // Проверка корректности формата электронной почты\r\n                if (!isValidEmail(email)) {\r\n                    // Вывод уведомления об ошибке в формате почты\r\n                    NotificationHelper.showCustomNotification(SignInActivity.this, null, getString(R.string.wrong_mail_format_message), getString(R.string.close), 0, 0, 0, 0);\r\n                } else if (email.equals(\"\") || password.equals(\"\")) {\r\n                    // Вывод уведомления об ошибке ввода данных (пустые поля)\r\n                    NotificationHelper.showCustomNotification(SignInActivity.this, null, getString(R.string.zero_input_message), getString(R.string.close), 0, 0, 0, 0);\r\n                } else {\r\n                    // Вызов метода для попытки входа пользователя\r\n                    loginUser(email, password);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // Получение состояния флага \"Запомнить меня\" из SharedPreferences\r\n        rememberMeCheckbox = findViewById(R.id.remember_me_checkbox);\r\n        if (isRememberMeChecked()) {\r\n            // Если флаг установлен, отметить его на чекбоксе и выполнить вход с сохраненными данными\r\n            rememberMeCheckbox.setChecked(true);\r\n            loginUser(getSavedEmail(), getSavedPassword());\r\n        }\r\n    }\r\n\r\n    // Проверка корректности формата электронной почты\r\n    private boolean isValidEmail(String email) {\r\n        return Patterns.EMAIL_ADDRESS.matcher(email).matches();\r\n    }\r\n\r\n    // Метод для входа пользователя\r\n    private void loginUser(String email, String password) {\r\n        // Вызов метода Firebase для входа с указанными данными\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            if (rememberMeCheckbox.isChecked()) {\r\n                                saveUserCredentials(email, password);\r\n                            } else {\r\n                                clearUserCredentials();\r\n                            }\r\n\r\n                            startMainActivity();\r\n                            // Если вход успешен, получаем уникальный идентификатор пользователя (UID) и загружаем его данные\r\n                            String userUID = sanitizeEmail(email);\r\n                            saveUID(userUID);\r\n\r\n                            // Вызов метода для загрузки данных пользователя\r\n                            Users.getUserDataFromFirebase(userUID, new Users.OnUserDataListener() {\r\n                                @Override\r\n                                public void onDataLoaded(String userName) {\r\n\r\n                                }\r\n\r\n                                @Override\r\n                                public void onDataLoaded(Users user) {\r\n                                    // Сохранение данных пользователя в SharedPreferences и запуск основной активности\r\n                                    saveUserCredentials(user);\r\n                                    startMainActivity();\r\n                                }\r\n\r\n                                @Override\r\n                                public void onDataNotAvailable() {\r\n                                    // Вывод уведомления об ошибке загрузки данных пользователя\r\n                                    Toast.makeText(SignInActivity.this, R.string.data_not_available_message, Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n                        } else {\r\n                            // Вывод уведомления об ошибке - неправильный пароль или почта\r\n                            NotificationHelper.showCustomNotification(SignInActivity.this, null, getString(R.string.wrong_password_or_mail_message), getString(R.string.close), 0, 0, 0, 0);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void clearUserCredentials() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.remove(\"email\");\r\n        editor.remove(\"password\");\r\n        editor.apply();\r\n    }\r\n\r\n    private void saveUserCredentials(String email, String password) {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"email\", email);\r\n        editor.putString(\"password\", password);\r\n        editor.apply();\r\n    }\r\n\r\n\r\n    // Сохранение данных пользователя в SharedPreferences\r\n    private void saveUserCredentials(Users user) {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"email\", user.getEmail());\r\n        editor.putString(\"name\", user.getName());\r\n        editor.putString(\"bio\", user.getBio());\r\n        editor.putString(\"height\", user.getHeight());\r\n        editor.putString(\"width\", user.getWeight());\r\n        editor.putString(\"gender\", user.getGender());\r\n        editor.putString(\"findGender\", user.getFindGender());\r\n        editor.putString(\"hobbies\", user.getHobbies());\r\n        editor.putString(\"target\", user.getTarget());\r\n        editor.putInt(\"age\", user.getAge());\r\n        editor.apply();\r\n    }\r\n\r\n    // Запуск основной активности приложения\r\n    private void startMainActivity() {\r\n        Intent intent = new Intent(SignInActivity.this, OwnProfileActivity.class);\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        startActivity(intent);\r\n        finish();\r\n    }\r\n\r\n    // Сохранение состояния флага \"Запомнить меня\" в SharedPreferences\r\n    private void saveRememberMeState(boolean isChecked) {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putBoolean(\"remember_me\", isChecked);\r\n        editor.apply();\r\n    }\r\n\r\n    // Получение состояния флага \"Запомнить меня\" из SharedPreferences\r\n    private boolean isRememberMeChecked() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getBoolean(\"remember_me\", false);\r\n    }\r\n\r\n    // Получение сохраненного email из SharedPreferences\r\n    private String getSavedEmail() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"email\", \"\");\r\n    }\r\n\r\n    // Получение сохраненного password из SharedPreferences\r\n    private String getSavedPassword() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"password\", \"\");\r\n    }\r\n\r\n    // Метод для \"санитарной\" обработки email (удаление символов [@, .])\r\n    public String sanitizeEmail(String email) {\r\n        String sanitizedEmail = email.replaceAll(\"[.@#$\\\\[\\\\]]\", \"\");\r\n        return sanitizedEmail;\r\n    }\r\n\r\n    private void saveUID(String UID){\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"UID\", UID);\r\n        editor.apply();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/meetyou/SignInActivity.java b/app/src/main/java/com/example/meetyou/SignInActivity.java
--- a/app/src/main/java/com/example/meetyou/SignInActivity.java	
+++ b/app/src/main/java/com/example/meetyou/SignInActivity.java	
@@ -131,7 +131,7 @@
                             // Если вход успешен, получаем уникальный идентификатор пользователя (UID) и загружаем его данные
                             String userUID = sanitizeEmail(email);
                             saveUID(userUID);
-
+                            Users.saveUserDataToSharedPreferences(SignInActivity.this, userUID);
                             // Вызов метода для загрузки данных пользователя
                             Users.getUserDataFromFirebase(userUID, new Users.OnUserDataListener() {
                                 @Override
Index: app/src/main/java/com/example/meetyou/ChooseFindTargetActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.meetyou;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.ActivityInfo;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.example.meetyou.MYFiles.NotificationHelper;\r\nimport com.example.meetyou.MYFiles.Users;\r\nimport com.example.meetyou.databinding.ActivityChooseFindTargetBinding;\r\n\r\npublic class ChooseFindTargetActivity extends AppCompatActivity {\r\n\r\n    ActivityChooseFindTargetBinding binding;\r\n\r\n    private boolean isShortChanged = false;\r\n    private boolean isLongChanged = false;\r\n    private boolean isFunChanged = false;\r\n    private boolean isSureChanged = false;\r\n    private boolean isSexChanged = false;\r\n    private boolean isFriendsChanged = false;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityChooseFindTargetBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);\r\n\r\n        getWindow().setStatusBarColor(ContextCompat.getColor(this, R.color.main));\r\n\r\n        binding.shortTermButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                isShortChanged = true;\r\n                isLongChanged = false;\r\n                isFunChanged = false;\r\n                isSureChanged = false;\r\n                isSexChanged = false;\r\n                isFriendsChanged = false;\r\n\r\n                binding.shortTermImage.setImageResource(R.drawable.short_term_selected);\r\n                binding.longTermImage.setImageResource(R.drawable.long_term);\r\n                binding.funTermImage.setImageResource(R.drawable.fun);\r\n                binding.notSureTermImage.setImageResource(R.drawable.not_sure);\r\n                binding.quickSexTermImage.setImageResource(R.drawable.quick_sex);\r\n                binding.friendsTermImage.setImageResource(R.drawable.friends);\r\n\r\n                updateButtonState();\r\n            }\r\n        });\r\n\r\n        binding.longTermButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                isShortChanged = false;\r\n                isLongChanged = true;\r\n                isFunChanged = false;\r\n                isSureChanged = false;\r\n                isSexChanged = false;\r\n                isFriendsChanged = false;\r\n\r\n                binding.shortTermImage.setImageResource(R.drawable.short_term);\r\n                binding.longTermImage.setImageResource(R.drawable.long_term_selected);\r\n                binding.funTermImage.setImageResource(R.drawable.fun);\r\n                binding.notSureTermImage.setImageResource(R.drawable.not_sure);\r\n                binding.quickSexTermImage.setImageResource(R.drawable.quick_sex);\r\n                binding.friendsTermImage.setImageResource(R.drawable.friends);\r\n\r\n                updateButtonState();\r\n            }\r\n        });\r\n\r\n        binding.funTermButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                isShortChanged = false;\r\n                isLongChanged = false;\r\n                isFunChanged = true;\r\n                isSureChanged = false;\r\n                isSexChanged = false;\r\n                isFriendsChanged = false;\r\n\r\n                binding.shortTermImage.setImageResource(R.drawable.short_term);\r\n                binding.longTermImage.setImageResource(R.drawable.long_term);\r\n                binding.funTermImage.setImageResource(R.drawable.fun_selected);\r\n                binding.notSureTermImage.setImageResource(R.drawable.not_sure);\r\n                binding.quickSexTermImage.setImageResource(R.drawable.quick_sex);\r\n                binding.friendsTermImage.setImageResource(R.drawable.friends);\r\n\r\n                updateButtonState();\r\n            }\r\n        });\r\n\r\n        binding.notSureTermButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                isShortChanged = false;\r\n                isLongChanged = false;\r\n                isFunChanged = false;\r\n                isSureChanged = true;\r\n                isSexChanged = false;\r\n                isFriendsChanged = false;\r\n\r\n                binding.shortTermImage.setImageResource(R.drawable.short_term);\r\n                binding.longTermImage.setImageResource(R.drawable.long_term);\r\n                binding.funTermImage.setImageResource(R.drawable.fun);\r\n                binding.notSureTermImage.setImageResource(R.drawable.not_sure_selected);\r\n                binding.quickSexTermImage.setImageResource(R.drawable.quick_sex);\r\n                binding.friendsTermImage.setImageResource(R.drawable.friends);\r\n\r\n                updateButtonState();\r\n            }\r\n        });\r\n\r\n        binding.quickSexTermButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                isShortChanged = false;\r\n                isLongChanged = false;\r\n                isFunChanged = false;\r\n                isSureChanged = false;\r\n                isSexChanged = true;\r\n                isFriendsChanged = false;\r\n\r\n                binding.shortTermImage.setImageResource(R.drawable.short_term);\r\n                binding.longTermImage.setImageResource(R.drawable.long_term);\r\n                binding.funTermImage.setImageResource(R.drawable.fun);\r\n                binding.notSureTermImage.setImageResource(R.drawable.not_sure);\r\n                binding.quickSexTermImage.setImageResource(R.drawable.quick_sex_selected);\r\n                binding.friendsTermImage.setImageResource(R.drawable.friends);\r\n\r\n                updateButtonState();\r\n            }\r\n        });\r\n\r\n        binding.friendsTermButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                isShortChanged = false;\r\n                isLongChanged = false;\r\n                isFunChanged = false;\r\n                isSureChanged = false;\r\n                isSexChanged = false;\r\n                isFriendsChanged = true;\r\n\r\n                binding.shortTermImage.setImageResource(R.drawable.short_term);\r\n                binding.longTermImage.setImageResource(R.drawable.long_term);\r\n                binding.funTermImage.setImageResource(R.drawable.fun);\r\n                binding.notSureTermImage.setImageResource(R.drawable.not_sure);\r\n                binding.quickSexTermImage.setImageResource(R.drawable.quick_sex);\r\n                binding.friendsTermImage.setImageResource(R.drawable.friends_selected);\r\n\r\n                updateButtonState();\r\n            }\r\n        });\r\n\r\n        binding.goNextButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(isFriendsChanged || isShortChanged || isFunChanged || isLongChanged || isSexChanged || isSureChanged){\r\n                    if(isFriendsChanged)\r\n                    {\r\n                        Users.updateUserTarget(getUID(), \"friends\");\r\n                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnerParametersActivity.class);\r\n                        startActivity(intent);\r\n                    } else if (isShortChanged)\r\n                    {\r\n                        Users.updateUserTarget(getUID(), \"short-term\");\r\n                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnerParametersActivity.class);\r\n                        startActivity(intent);\r\n                    } else if (isLongChanged)\r\n                    {\r\n                        Users.updateUserTarget(getUID(), \"long-term\");\r\n                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnerParametersActivity.class);\r\n                        startActivity(intent);\r\n                    } else if (isFunChanged)\r\n                    {\r\n                        Users.updateUserTarget(getUID(), \"fun\");\r\n                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnerParametersActivity.class);\r\n                        startActivity(intent);\r\n                    } else if (isSexChanged)\r\n                    {\r\n                        Users.updateUserTarget(getUID(), \"sex\");\r\n                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnerParametersActivity.class);\r\n                        startActivity(intent);\r\n                    } else if (isSureChanged)\r\n                    {\r\n                        Users.updateUserTarget(getUID(), \"not-sure\");\r\n                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnerParametersActivity.class);\r\n                        startActivity(intent);\r\n                    }\r\n                }else{\r\n                    NotificationHelper.showCustomNotification(ChooseFindTargetActivity.this, null, getString(R.string.pick_a_few_targets_message), getString(R.string.close), 0, 0, 0,0);\r\n                }\r\n            }\r\n        });\r\n\r\n        binding.goBackButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateButtonState() {\r\n//        binding.shortTermImage.setImageResource(isShortChanged ? R.drawable.short_term_selected : R.drawable.short_term);\r\n//        binding.longTermImage.setImageResource(isLongChanged ? R.drawable.long_term_selected : R.drawable.long_term);\r\n//        binding.funTermImage.setImageResource(isFunChanged ? R.drawable.fun_selected : R.drawable.fun);\r\n//        binding.notSureTermImage.setImageResource(isSureChanged ? R.drawable.not_sure_selected : R.drawable.not_sure);\r\n//        binding.quickSexTermImage.setImageResource(isSexChanged ? R.drawable.quick_sex_selected : R.drawable.quick_sex);\r\n//        binding.friendsTermImage.setImageResource(isFriendsChanged ? R.drawable.friends_selected : R.drawable.friends);\r\n        if(isFriendsChanged || isShortChanged || isFunChanged || isLongChanged || isSexChanged || isSureChanged){\r\n            binding.goNextButton.setBackgroundResource(R.drawable.button_background_blue);\r\n            binding.goNextButton.setTextColor(getColor(R.color.white));\r\n        } else {\r\n            binding.goNextButton.setTextColor(getColor(R.color.neutral_dark_gray));\r\n            binding.goNextButton.setBackgroundResource(R.drawable.button_background_gray);\r\n        }\r\n    }\r\n\r\n    private String getUID(){\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"UID\", \"\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/meetyou/ChooseFindTargetActivity.java b/app/src/main/java/com/example/meetyou/ChooseFindTargetActivity.java
--- a/app/src/main/java/com/example/meetyou/ChooseFindTargetActivity.java	
+++ b/app/src/main/java/com/example/meetyou/ChooseFindTargetActivity.java	
@@ -166,32 +166,32 @@
                     if(isFriendsChanged)
                     {
                         Users.updateUserTarget(getUID(), "friends");
-                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnerParametersActivity.class);
+                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnersParametersActivity.class);
                         startActivity(intent);
                     } else if (isShortChanged)
                     {
                         Users.updateUserTarget(getUID(), "short-term");
-                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnerParametersActivity.class);
+                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnersParametersActivity.class);
                         startActivity(intent);
                     } else if (isLongChanged)
                     {
                         Users.updateUserTarget(getUID(), "long-term");
-                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnerParametersActivity.class);
+                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnersParametersActivity.class);
                         startActivity(intent);
                     } else if (isFunChanged)
                     {
                         Users.updateUserTarget(getUID(), "fun");
-                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnerParametersActivity.class);
+                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnersParametersActivity.class);
                         startActivity(intent);
                     } else if (isSexChanged)
                     {
                         Users.updateUserTarget(getUID(), "sex");
-                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnerParametersActivity.class);
+                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnersParametersActivity.class);
                         startActivity(intent);
                     } else if (isSureChanged)
                     {
                         Users.updateUserTarget(getUID(), "not-sure");
-                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnerParametersActivity.class);
+                        Intent intent = new Intent(ChooseFindTargetActivity.this, ChoosePartnersParametersActivity.class);
                         startActivity(intent);
                     }
                 }else{
Index: app/src/main/java/com/example/meetyou/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.meetyou;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.ActivityInfo;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport com.example.meetyou.Database.DatabaseHelper;\r\nimport com.example.meetyou.MYFiles.NotificationHelper;\r\nimport com.example.meetyou.MYFiles.Users;\r\nimport com.example.meetyou.databinding.ActivityMainBinding;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    FirebaseAuth mAuth;\r\n    @NonNull ActivityMainBinding binding;\r\n    DatabaseHelper databaseHelper;\r\n    private int[] photoIds = {\r\n            R.drawable.photo_1,\r\n            R.drawable.photo_2,\r\n            R.drawable.photo_3,\r\n            R.drawable.photo_4,\r\n            R.drawable.photo_5\r\n    };\r\n    private int currentPosition = 0;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityMainBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\r\n\r\n        PhotoAdapter photoAdapter = new PhotoAdapter(photoIds);\r\n        binding.viewPager.setAdapter(photoAdapter);\r\n\r\n        getWindow().setStatusBarColor(ContextCompat.getColor(MainActivity.this, R.color.main));\r\n\r\n        databaseHelper = new DatabaseHelper(this);\r\n\r\n        String userEmail = getUserEmail();\r\n        String userPassword = getUserPassword();\r\n\r\n        binding.likebutton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                NotificationHelper.showHeart(MainActivity.this);\r\n            }\r\n        });\r\n\r\n        binding.viewPager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {\r\n            @Override\r\n            public void onPageSelected(int position) {\r\n                currentPosition = position;\r\n                if(currentPosition == 0){\r\n                    binding.chooseImage.setImageResource(R.drawable.left2choosed);\r\n                } else if (currentPosition == 1) {\r\n                    binding.chooseImage.setImageResource(R.drawable.left1choosed);\r\n                } else if (currentPosition == 2) {\r\n                    binding.chooseImage.setImageResource(R.drawable.centerchoosed);\r\n                } else if (currentPosition == 3){\r\n                    binding.chooseImage.setImageResource(R.drawable.right1choosed);\r\n                } else{\r\n                    binding.chooseImage.setImageResource(R.drawable.right2choosed);\r\n                }\r\n            }\r\n        });\r\n\r\n        binding.profileButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivity.this, OwnProfileActivity.class);\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        binding.dislikebutton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Users.getRandomUserFromPool(getUID(),\"male\", \"female\", new Users.OnUserDataListener() {\r\n                    @Override\r\n                    public void onDataLoaded(String userName) {\r\n                        binding.nameTextView.setText(userName);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onDataLoaded(Users user) {\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onDataNotAvailable() {\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private String getUserEmail() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"email\", \"\");\r\n    }\r\n\r\n    private String getUserPassword() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"password\", \"\");\r\n    }\r\n\r\n    private String getUID(){\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"UID\", \"\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/meetyou/MainActivity.java b/app/src/main/java/com/example/meetyou/MainActivity.java
--- a/app/src/main/java/com/example/meetyou/MainActivity.java	
+++ b/app/src/main/java/com/example/meetyou/MainActivity.java	
@@ -20,7 +20,8 @@
 public class MainActivity extends AppCompatActivity {
 
     FirebaseAuth mAuth;
-    @NonNull ActivityMainBinding binding;
+    @NonNull
+    ActivityMainBinding binding;
     DatabaseHelper databaseHelper;
     private int[] photoIds = {
             R.drawable.photo_1,
@@ -30,6 +31,7 @@
             R.drawable.photo_5
     };
     private int currentPosition = 0;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -58,15 +60,15 @@
             @Override
             public void onPageSelected(int position) {
                 currentPosition = position;
-                if(currentPosition == 0){
+                if (currentPosition == 0) {
                     binding.chooseImage.setImageResource(R.drawable.left2choosed);
                 } else if (currentPosition == 1) {
                     binding.chooseImage.setImageResource(R.drawable.left1choosed);
                 } else if (currentPosition == 2) {
                     binding.chooseImage.setImageResource(R.drawable.centerchoosed);
-                } else if (currentPosition == 3){
+                } else if (currentPosition == 3) {
                     binding.chooseImage.setImageResource(R.drawable.right1choosed);
-                } else{
+                } else {
                     binding.chooseImage.setImageResource(R.drawable.right2choosed);
                 }
             }
@@ -85,10 +87,11 @@
         binding.dislikebutton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                Users.getRandomUserFromPool(getUID(),"male", "female", new Users.OnUserDataListener() {
+                Users.getRandomUserFromPool(getUID(), getFindGender(), getGender(), getWeight(), getHeight(), getFindHeight(), getFindWeight(), getAge(), getMinAge(), getMaxAge(), new Users.OnUserDataListener() {
                     @Override
-                    public void onDataLoaded(String userName) {
+                    public void onDataLoaded(String userName, String bio) {
                         binding.nameTextView.setText(userName);
+                        binding.informationTextView.setText(bio);
                     }
 
                     @Override
@@ -115,8 +118,53 @@
         return sharedPreferences.getString("password", "");
     }
 
-    private String getUID(){
+    private String getUID() {
         SharedPreferences sharedPreferences = getSharedPreferences("UserPrefs", MODE_PRIVATE);
         return sharedPreferences.getString("UID", "");
     }
+
+    private String getFindGender() {
+        SharedPreferences sharedPreferences = getSharedPreferences("UserPrefs", MODE_PRIVATE);
+        return sharedPreferences.getString("findGender", "");
+    }
+
+    private String getGender() {
+        SharedPreferences sharedPreferences = getSharedPreferences("UserPrefs", MODE_PRIVATE);
+        return sharedPreferences.getString("findGender", "");
+    }
+
+    private String getWeight() {
+        SharedPreferences sharedPreferences = getSharedPreferences("UserPrefs", MODE_PRIVATE);
+        return sharedPreferences.getString("weight", "");
+    }
+
+    private String getHeight() {
+        SharedPreferences sharedPreferences = getSharedPreferences("UserPrefs", MODE_PRIVATE);
+        return sharedPreferences.getString("height", "");
+    }
+
+    private String getFindHeight() {
+        SharedPreferences sharedPreferences = getSharedPreferences("UserPrefs", MODE_PRIVATE);
+        return sharedPreferences.getString("findHeight", "");
+    }
+
+    private String getFindWeight() {
+        SharedPreferences sharedPreferences = getSharedPreferences("UserPrefs", MODE_PRIVATE);
+        return sharedPreferences.getString("findWeight", "");
+    }
+
+    private int getAge() {
+        SharedPreferences sharedPreferences = getSharedPreferences("UserPrefs", MODE_PRIVATE);
+        return sharedPreferences.getInt("age", 0);
+    }
+
+    private int getMinAge() {
+        SharedPreferences sharedPreferences = getSharedPreferences("UserPrefs", MODE_PRIVATE);
+        return sharedPreferences.getInt("minAge", 0);
+    }
+
+    private int getMaxAge() {
+        SharedPreferences sharedPreferences = getSharedPreferences("UserPrefs", MODE_PRIVATE);
+        return sharedPreferences.getInt("maxAge", 0);
+    }
 }
\ No newline at end of file
