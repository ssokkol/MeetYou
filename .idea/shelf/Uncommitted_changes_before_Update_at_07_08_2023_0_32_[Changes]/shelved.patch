Index: app/src/main/java/com/example/meetyou/MYFiles/Users.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.meetyou.MYFiles;\r\n\r\nimport android.content.Context;\r\nimport android.content.SharedPreferences;\r\nimport android.util.Log;\r\n\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\npublic class Users {\r\n    String UID, email, name, bio, height, weight, gender, findGender, findHeight, findWeight, hobbies, target, color, status, photo1, photo2, photo3, photo4, photo5;\r\n    int age, boosts, likes, megasymps;\r\n\r\n    boolean verified;\r\n\r\n    public Users() {\r\n    }\r\n\r\n    public Users(String UID, String email, String name, String bio, String height, String weight, String gender, String findGender, String findHeight, String findWeight, String hobbies, String target,\r\n                 String color, String status,\r\n                 String photo1, String photo2, String photo3, String photo4, int age, int boosts, int likes, int megasymps, boolean verified)\r\n    {\r\n        this.UID = UID;\r\n        this.email = email;\r\n        this.name = name;\r\n        this.bio = bio;\r\n        this.height = height;\r\n        this.weight = weight;\r\n        this.gender = gender;\r\n        this.findGender = findGender;\r\n        this.findHeight = findHeight;\r\n        this.findWeight = findWeight;\r\n        this.hobbies = hobbies;\r\n        this.target = target;\r\n        this.color = color;\r\n        this.status = status;\r\n        this.photo1 = photo1;\r\n        this.photo2 = photo2;\r\n        this.photo3 = photo3;\r\n        this.photo4 = photo4;\r\n        this.photo5 = photo5;\r\n        this.age = age;\r\n        this.boosts = boosts;\r\n        this.likes = likes;\r\n        this.megasymps = megasymps;\r\n        this.verified = verified;\r\n    }\r\n\r\n    public String getFindHeight() {\r\n        return findHeight;\r\n    }\r\n\r\n    public void setFindHeight(String findHeight) {\r\n        this.findHeight = findHeight;\r\n    }\r\n\r\n    public String getFindWeight() {\r\n        return findWeight;\r\n    }\r\n\r\n    public void setFindWeight(String findWeight) {\r\n        this.findWeight = findWeight;\r\n    }\r\n\r\n    public String getPhoto1() {\r\n        return photo1;\r\n    }\r\n\r\n    public void setPhoto1(String photo1) {\r\n        this.photo1 = photo1;\r\n    }\r\n\r\n    public String getPhoto2() {\r\n        return photo2;\r\n    }\r\n\r\n    public void setPhoto2(String photo2) {\r\n        this.photo2 = photo2;\r\n    }\r\n\r\n    public String getPhoto3() {\r\n        return photo3;\r\n    }\r\n\r\n    public void setPhoto3(String photo3) {\r\n        this.photo3 = photo3;\r\n    }\r\n\r\n    public String getPhoto4() {\r\n        return photo4;\r\n    }\r\n\r\n    public void setPhoto4(String photo4) {\r\n        this.photo4 = photo4;\r\n    }\r\n\r\n    public String getPhoto5() {\r\n        return photo5;\r\n    }\r\n\r\n    public void setPhoto5(String photo5) {\r\n        this.photo5 = photo5;\r\n    }\r\n\r\n    public int getBoosts() {\r\n        return boosts;\r\n    }\r\n\r\n    public void setBoosts(int boosts) {\r\n        this.boosts = boosts;\r\n    }\r\n\r\n    public int getLikes() {\r\n        return likes;\r\n    }\r\n\r\n    public void setLikes(int likes) {\r\n        this.likes = likes;\r\n    }\r\n\r\n    public int getMegasymps() {\r\n        return megasymps;\r\n    }\r\n\r\n    public void setMegasymps(int megasymps) {\r\n        this.megasymps = megasymps;\r\n    }\r\n\r\n    public boolean isVerified() {\r\n        return verified;\r\n    }\r\n\r\n    public void setVerified(boolean verified) {\r\n        this.verified = verified;\r\n    }\r\n\r\n    public String getColor() {\r\n        return color;\r\n    }\r\n\r\n    public void setColor(String color) {\r\n        this.color = color;\r\n    }\r\n\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(String status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public String getUID() {\r\n        return UID;\r\n    }\r\n\r\n    public void setUID(String UID) {\r\n        this.UID = UID;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getBio() {\r\n        return bio;\r\n    }\r\n\r\n    public void setBio(String bio) {\r\n        this.bio = bio;\r\n    }\r\n\r\n    public String getHeight() {\r\n        return height;\r\n    }\r\n\r\n    public void setHeight(String height) {\r\n        this.height = height;\r\n    }\r\n\r\n    public String getWeight() {\r\n        return weight;\r\n    }\r\n\r\n    public void setWeight(String weight) {\r\n        this.weight = weight;\r\n    }\r\n\r\n    public String getGender() {\r\n        return gender;\r\n    }\r\n\r\n    public void setGender(String gender) {\r\n        this.gender = gender;\r\n    }\r\n\r\n    public String getFindGender() {\r\n        return findGender;\r\n    }\r\n\r\n    public void setFindGender(String findGender) {\r\n        this.findGender = findGender;\r\n    }\r\n\r\n    public String getHobbies() {\r\n        return hobbies;\r\n    }\r\n\r\n    public void setHobbies(String hobbies) {\r\n        this.hobbies = hobbies;\r\n    }\r\n\r\n    public String getTarget() {\r\n        return target;\r\n    }\r\n\r\n    public void setTarget(String target) {\r\n        this.target = target;\r\n    }\r\n\r\n    public int getAge() {\r\n        return age;\r\n    }\r\n\r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n\r\n    public static void updateUserName(String UID, String newName) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"name\");\r\n        userRef.setValue(newName);\r\n    }\r\n\r\n    public static void updateUserBio(String UID, String newBio) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"bio\");\r\n        userRef.setValue(newBio);\r\n    }\r\n\r\n    public static void updateUserHeight(String UID, String newHeight) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"height\");\r\n        userRef.setValue(newHeight);\r\n    }\r\n\r\n    public static void updateUserWeight(String UID, String newWeight) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"weight\");\r\n        userRef.setValue(newWeight);\r\n    }\r\n\r\n    public static void updateUserGender(String UID, String newGender) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"gender\");\r\n        userRef.setValue(newGender);\r\n    }\r\n\r\n    public static void updateUserFindGender(String UID, String newFindGender) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"findGender\");\r\n        userRef.setValue(newFindGender);\r\n    }\r\n\r\n    public static void updateUserHobbies(String UID, String newHobbies) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"hobbies\");\r\n        userRef.setValue(newHobbies);\r\n    }\r\n\r\n    public static void updateUserTarget(String UID, String newTarget) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"target\");\r\n        userRef.setValue(newTarget);\r\n    }\r\n\r\n    public static void updateUserColor(String UID, String newColor) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"color\");\r\n        userRef.setValue(newColor);\r\n    }\r\n\r\n    public static void updateUserStatus(String UID, String newStatus) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"status\");\r\n        userRef.setValue(newStatus);\r\n    }\r\n\r\n    public static void updateUserAge(String UID, int newAge) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"age\");\r\n        userRef.setValue(newAge);\r\n    }\r\n\r\n    public static void updateVerification(String UID, boolean newVerification){\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"verified\");\r\n        userRef.setValue(newVerification);\r\n    }\r\n\r\n\r\n    public static void updateUserPhoto(String UID, String photoName,String photoURL){\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(photoName);\r\n        userRef.setValue(photoURL);\r\n    }\r\n\r\n\r\n    public static void updateUserFindHeight(String UID, String newFindHeight) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"findHeight\");\r\n        userRef.setValue(newFindHeight);\r\n    }\r\n\r\n    public static void updateUserFindWeight(String UID, String newFindWeight) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID).child(\"findWeight\");\r\n        userRef.setValue(newFindWeight);\r\n    }\r\n\r\n    public static void getUserDataFromFirebase(String UID, final OnUserDataListener listener) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID);\r\n        userRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(DataSnapshot dataSnapshot) {\r\n                Users user = dataSnapshot.getValue(Users.class);\r\n                if (user != null) {\r\n                    listener.onDataLoaded(user);\r\n                } else {\r\n                    listener.onDataNotAvailable();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(DatabaseError databaseError) {\r\n                listener.onDataNotAvailable();\r\n            }\r\n        });\r\n    }\r\n\r\n    public interface OnUserDataListener {\r\n\r\n        void onDataLoaded(String userName, String userBio);\r\n\r\n        void onDataLoaded(Users user);\r\n        void onDataNotAvailable();\r\n    }\r\n\r\n    public static void saveUserDataToSharedPreferences(Context context, String UID) {\r\n        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference(\"Users\").child(UID);\r\n        userRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(DataSnapshot dataSnapshot) {\r\n                Users user = dataSnapshot.getValue(Users.class);\r\n\r\n                if (user != null) {\r\n                    SharedPreferences sharedPreferences = context.getSharedPreferences(\"UserPrefs\", Context.MODE_PRIVATE);\r\n                    SharedPreferences.Editor editor = sharedPreferences.edit();\r\n                    editor.putString(\"name\", user.getName());\r\n                    editor.putString(\"bio\", user.getBio());\r\n                    editor.putString(\"height\", user.getHeight());\r\n                    editor.putString(\"weight\", user.getWeight());\r\n                    editor.putString(\"gender\", user.getGender());\r\n                    editor.putString(\"findGender\", user.getFindGender());\r\n                    editor.putString(\"findHeight\", user.getFindHeight());\r\n                    editor.putString(\"findWeight\", user.getFindWeight());\r\n                    editor.putString(\"hobbies\", user.getHobbies());\r\n                    editor.putString(\"target\", user.getTarget());\r\n                    editor.putString(\"color\", user.getColor());\r\n                    editor.putString(\"status\", user.getStatus());\r\n                    editor.putString(\"photo1\", user.getPhoto1());\r\n                    editor.putString(\"photo2\", user.getPhoto2());\r\n                    editor.putString(\"photo3\", user.getPhoto3());\r\n                    editor.putString(\"photo4\", user.getPhoto4());\r\n                    editor.putString(\"photo5\", user.getPhoto5());\r\n                    editor.putInt(\"age\", user.getAge());\r\n                    editor.putInt(\"boosts\", user.getBoosts());\r\n                    editor.putInt(\"likes\", user.getLikes());\r\n                    editor.putInt(\"megasymps\", user.getMegasymps());\r\n                    editor.putBoolean(\"verified\", user.isVerified());\r\n                    editor.apply();\r\n                } else {\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(DatabaseError databaseError) {\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public static Users getUserDataFromSharedPreferences(Context context) {\r\n        SharedPreferences sharedPreferences = context.getSharedPreferences(\"UserPrefs\", Context.MODE_PRIVATE);\r\n        String UID = sharedPreferences.getString(\"UID\", \"\");\r\n        String name = sharedPreferences.getString(\"name\", \"\");\r\n        String bio = sharedPreferences.getString(\"bio\", \"\");\r\n        String height = sharedPreferences.getString(\"height\", \"\");\r\n        String weight = sharedPreferences.getString(\"weight\", \"\");\r\n        String gender = sharedPreferences.getString(\"gender\", \"\");\r\n        String findGender = sharedPreferences.getString(\"findGender\", \"\");\r\n        String findHeight = sharedPreferences.getString(\"findHeight\", \"\");\r\n        String findWeight = sharedPreferences.getString(\"findWeight\", \"\");\r\n        String hobbies = sharedPreferences.getString(\"hobbies\", \"\");\r\n        String target = sharedPreferences.getString(\"target\", \"\");\r\n        String color = sharedPreferences.getString(\"color\", \"\");\r\n        String status = sharedPreferences.getString(\"status\", \"\");\r\n        String photo1 = sharedPreferences.getString(\"photo1\", \"\");\r\n        String photo2 = sharedPreferences.getString(\"photo2\", \"\");\r\n        String photo3 = sharedPreferences.getString(\"photo3\", \"\");\r\n        String photo4 = sharedPreferences.getString(\"photo4\", \"\");\r\n        String photo5 = sharedPreferences.getString(\"photo5\", \"\");\r\n        int age = sharedPreferences.getInt(\"age\", 0);\r\n        int boosts = sharedPreferences.getInt(\"boosts\", 0);\r\n        int likes = sharedPreferences.getInt(\"likes\", 0);\r\n        int megasymps = sharedPreferences.getInt(\"megasymps\", 0);\r\n        boolean verified = sharedPreferences.getBoolean(\"verified\", false);\r\n\r\n        return new Users(UID, name, bio, height, weight, gender, findGender, findHeight, findHeight, hobbies, target, color, status, photo1, photo2, photo3, photo4, photo5, age, boosts, likes, megasymps, verified);\r\n    }\r\n\r\n\r\n\r\n    public static void getRandomUserFromPool(String gender, String findGender, String findHeight, String findWeight, final OnUserDataListener listener) {\r\n        DatabaseReference usersRef = FirebaseDatabase.getInstance().getReference(\"Users\");\r\n        Query query = usersRef.orderByChild(\"gender\").equalTo(gender);\r\n\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(DataSnapshot dataSnapshot) {\r\n                List<Users> femaleUsers = new ArrayList<>();\r\n                for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                    Users user = snapshot.getValue(Users.class);\r\n                    assert user != null;\r\n                    if (findGender.equals(\"any\")) {\r\n                        if (user != null && user.getHeight().equals(findHeight) && user.getWeight().equals(findWeight) && user.getFindGender().equals(gender)) {\r\n                            femaleUsers.add(user);\r\n                        }\r\n                    }else {\r\n                        if (user != null && user.getGender().equals(findGender) && user.getHeight().equals(findHeight) && user.getWeight().equals(findWeight)) {\r\n                            if (user.getFindGender().equals(\"any\")) {\r\n                                femaleUsers.add(user);\r\n                            } else if (user.getFindGender().equals(gender)) {\r\n                                femaleUsers.add(user);\r\n                            } else {\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!femaleUsers.isEmpty()) {\r\n                    int randomIndex = new Random().nextInt(femaleUsers.size());\r\n                    Users randomFemaleUser = femaleUsers.get(randomIndex);\r\n                    listener.onDataLoaded(randomFemaleUser.getName(), randomFemaleUser.getBio());\r\n                } else {\r\n                    listener.onDataNotAvailable();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(DatabaseError databaseError) {\r\n                listener.onDataNotAvailable();\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/meetyou/MYFiles/Users.java b/app/src/main/java/com/example/meetyou/MYFiles/Users.java
--- a/app/src/main/java/com/example/meetyou/MYFiles/Users.java	(revision 96aba519cbebc5d8d79d0256b613085c014284b6)
+++ b/app/src/main/java/com/example/meetyou/MYFiles/Users.java	(date 1691346578177)
@@ -345,7 +345,7 @@
 
     public interface OnUserDataListener {
 
-        void onDataLoaded(String userName, String userBio);
+        void onDataLoaded(String userName, String userBio, String photo1, String photo2, String photo3, String photo4,String photo5);
 
         void onDataLoaded(Users user);
         void onDataNotAvailable();
@@ -457,7 +457,7 @@
                 if (!femaleUsers.isEmpty()) {
                     int randomIndex = new Random().nextInt(femaleUsers.size());
                     Users randomFemaleUser = femaleUsers.get(randomIndex);
-                    listener.onDataLoaded(randomFemaleUser.getName(), randomFemaleUser.getBio());
+                    listener.onDataLoaded(randomFemaleUser.getName(), randomFemaleUser.getBio(),randomFemaleUser.getPhoto1(),randomFemaleUser.getPhoto2(),randomFemaleUser.getPhoto3(),randomFemaleUser.getPhoto4(),randomFemaleUser.getPhoto5());
                 } else {
                     listener.onDataNotAvailable();
                 }
Index: app/src/main/java/com/example/meetyou/MYFiles/PhotoAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.meetyou.MYFiles;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.meetyou.R;\r\n\r\npublic class PhotoAdapter extends RecyclerView.Adapter<PhotoAdapter.PhotoViewHolder> {\r\n\r\n    private int[] photoIds;\r\n\r\n    public PhotoAdapter(int[] photoIds) {\r\n        this.photoIds = photoIds;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public PhotoViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_photo, parent, false);\r\n        return new PhotoViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull PhotoViewHolder holder, int position) {\r\n        holder.imageView.setImageResource(photoIds[position]);\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return photoIds.length;\r\n    }\r\n\r\n    static class PhotoViewHolder extends RecyclerView.ViewHolder {\r\n        ImageView imageView;\r\n\r\n        public PhotoViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            imageView = itemView.findViewById(R.id.photoImageView);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/meetyou/MYFiles/PhotoAdapter.java b/app/src/main/java/com/example/meetyou/MYFiles/PhotoAdapter.java
--- a/app/src/main/java/com/example/meetyou/MYFiles/PhotoAdapter.java	(revision 96aba519cbebc5d8d79d0256b613085c014284b6)
+++ b/app/src/main/java/com/example/meetyou/MYFiles/PhotoAdapter.java	(date 1691348891845)
@@ -9,13 +9,21 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.example.meetyou.R;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+import com.squareup.picasso.Picasso;
+
+import java.util.List;
 
 public class PhotoAdapter extends RecyclerView.Adapter<PhotoAdapter.PhotoViewHolder> {
+    private List<String> photoUrls;
+//    private int[] photoIds;
 
-    private int[] photoIds;
-
-    public PhotoAdapter(int[] photoIds) {
-        this.photoIds = photoIds;
+    public PhotoAdapter(List<String> photoUrls) {
+        this.photoUrls = photoUrls;
     }
 
     @NonNull
@@ -27,12 +35,14 @@
 
     @Override
     public void onBindViewHolder(@NonNull PhotoViewHolder holder, int position) {
-        holder.imageView.setImageResource(photoIds[position]);
+        String imageUrl;
+        imageUrl = photoUrls.get(position);
+        Picasso.get().load(imageUrl).into(holder.imageView);
     }
 
     @Override
     public int getItemCount() {
-        return photoIds.length;
+        return 5;
     }
 
     static class PhotoViewHolder extends RecyclerView.ViewHolder {
Index: app/src/main/java/com/example/meetyou/SignInActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.meetyou;\r\n\r\nimport static com.example.meetyou.MYFiles.Users.saveUserDataToSharedPreferences;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.ActivityInfo;\r\nimport android.os.Bundle;\r\nimport android.util.Patterns;\r\nimport android.view.View;\r\nimport android.widget.CheckBox;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.example.meetyou.Database.DatabaseHelper;\r\nimport com.example.meetyou.MYFiles.NotificationHelper;\r\nimport com.example.meetyou.MYFiles.Users;\r\nimport com.example.meetyou.databinding.ActivitySignInBinding;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\npublic class SignInActivity extends AppCompatActivity {\r\n\r\n    // Подключение привязки к макету активности\r\n    ActivitySignInBinding binding;\r\n\r\n    // Переменная для работы с базой данных\r\n    DatabaseHelper databaseHelper;\r\n\r\n    // Флаг для запоминания пользователя (опциональный выбор)\r\n    private CheckBox rememberMeCheckbox;\r\n\r\n    // Флаг, отмечающий состояние \"Запомнить меня\"\r\n    boolean isRememberMeChecked = false;\r\n\r\n    // Объект для аутентификации через Firebase\r\n    private FirebaseAuth mAuth;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivitySignInBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\r\n\r\n        // Изменение цвета статус-бара\r\n        getWindow().setStatusBarColor(ContextCompat.getColor(SignInActivity.this, R.color.main));\r\n\r\n\r\n        // Получение экземпляра Firebase для аутентификации\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        // Получение состояния флага \"Запомнить меня\" из SharedPreferences\r\n        rememberMeCheckbox = findViewById(R.id.remember_me_checkbox);\r\n        isRememberMeChecked = isRememberMeChecked(); // Получаем значение из SharedPreferences\r\n        rememberMeCheckbox.setChecked(isRememberMeChecked); // Устанавливаем состояние RememberMeCheckbox\r\n        if (isRememberMeChecked) {\r\n            String savedEmail = getSavedEmail();\r\n            String savedPassword = getSavedPassword();\r\n            if (!savedEmail.isEmpty() && !savedPassword.isEmpty()) {\r\n                loginUser(savedEmail, savedPassword);\r\n            } else {\r\n                clearUserCredentials();\r\n                Toast.makeText(this, \"Saved email or password is empty. Please log in again.\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n\r\n        // Инициализация помощника для работы с базой данных\r\n        databaseHelper = new DatabaseHelper(this);\r\n\r\n        // Обработчик кнопки \"Назад\" - закрывает активность\r\n        AppCompatButton backButton = findViewById(R.id.go_back_button);\r\n        backButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n        // Обработчик кнопки \"Войти\" - выполняет попытку входа\r\n        binding.signInButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String email = binding.mailText.getText().toString().trim();\r\n                String password = binding.password.getText().toString().trim();\r\n\r\n                // Сохранение состояния флага \"Запомнить меня\" в SharedPreferences\r\n                saveRememberMeState(binding.rememberMeCheckbox.isChecked());\r\n\r\n                // Проверка корректности формата электронной почты\r\n                if (!isValidEmail(email)) {\r\n                    // Вывод уведомления об ошибке в формате почты\r\n                    NotificationHelper.showCustomNotification(SignInActivity.this, null, getString(R.string.wrong_mail_format_message), getString(R.string.close), 0, 0, 0, 0);\r\n                } else if (email.isEmpty() || password.isEmpty()) {\r\n                    // Вывод уведомления об ошибке ввода данных (пустые поля)\r\n                    NotificationHelper.showCustomNotification(SignInActivity.this, null, getString(R.string.zero_input_message), getString(R.string.close), 0, 0, 0, 0);\r\n                } else {\r\n                    // Вызов метода для попытки входа пользователя\r\n                    loginUser(binding.mailText.getText().toString(), binding.password.getText().toString().trim());\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Проверка корректности формата электронной почты\r\n    private boolean isValidEmail(String email) {\r\n        return Patterns.EMAIL_ADDRESS.matcher(email).matches();\r\n    }\r\n\r\n    // Метод для входа пользователя\r\n    private void loginUser(String email, String password) {\r\n        // Вызов метода Firebase для входа с указанными данными\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            if (binding.rememberMeCheckbox.isChecked()) {\r\n                                saveUserCredentials(email, password);\r\n                            } else {\r\n                                clearUserCredentials();\r\n                            }\r\n\r\n                            startMainActivity();\r\n                            // Если вход успешен, получаем уникальный идентификатор пользователя (UID) и загружаем его данные\r\n                            String userUID = sanitizeEmail(email);\r\n                            saveUID(userUID);\r\n                            saveUserDataToSharedPreferences(SignInActivity.this, userUID);\r\n\r\n                            // Вызов метода для загрузки данных пользователя\r\n                            Users.getUserDataFromFirebase(userUID, new Users.OnUserDataListener() {\r\n                                @Override\r\n                                public void onDataLoaded(String userName, String bio) {\r\n                                    // Здесь вы можете обработать полученные данные, если это необходимо.\r\n                                    // Например, отобразить их на экране или выполнить другие действия с этими данными.\r\n                                }\r\n\r\n                                @Override\r\n                                public void onDataLoaded(Users user) {\r\n                                    // Сохранение данных пользователя в SharedPreferences и запуск основной активности\r\n                                    saveUserCredentials(user);\r\n                                    startMainActivity();\r\n                                }\r\n\r\n                                @Override\r\n                                public void onDataNotAvailable() {\r\n                                    // Вывод уведомления об ошибке загрузки данных пользователя\r\n                                    Toast.makeText(SignInActivity.this, R.string.data_not_available_message, Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n                        } else {\r\n                            // Вывод уведомления об ошибке - неправильный пароль или почта\r\n                            NotificationHelper.showCustomNotification(SignInActivity.this, null, getString(R.string.wrong_password_or_mail_message), getString(R.string.close), 0, 0, 0, 0);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    // Метод для очистки учетных данных пользователя\r\n    private void clearUserCredentials() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.remove(\"email\");\r\n        editor.remove(\"password\");\r\n        editor.apply();\r\n    }\r\n\r\n    // Метод для сохранения учетных данных пользователя в SharedPreferences\r\n    private void saveUserCredentials(String email, String password) {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"email\", email);\r\n        editor.putString(\"password\", password);\r\n        editor.apply();\r\n    }\r\n\r\n    // Метод для сохранения данных пользователя в SharedPreferences\r\n    private void saveUserCredentials(Users user) {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"email\", user.getEmail());\r\n        editor.putString(\"name\", user.getName());\r\n        editor.putString(\"bio\", user.getBio());\r\n        editor.putString(\"height\", user.getHeight());\r\n        editor.putString(\"width\", user.getWeight());\r\n        editor.putString(\"gender\", user.getGender());\r\n        editor.putString(\"findGender\", user.getFindGender());\r\n        editor.putString(\"hobbies\", user.getHobbies());\r\n        editor.putString(\"target\", user.getTarget());\r\n        editor.putInt(\"age\", user.getAge());\r\n        editor.apply();\r\n    }\r\n\r\n    // Запуск основной активности приложения\r\n    private void startMainActivity() {\r\n        Intent intent = new Intent(SignInActivity.this, OwnProfileActivity.class);\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        startActivity(intent);\r\n        finish();\r\n    }\r\n\r\n    // Сохранение состояния флага \"Запомнить меня\" в SharedPreferences\r\n    private void saveRememberMeState(boolean isChecked) {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putBoolean(\"remember_me\", isChecked);\r\n        editor.apply();\r\n    }\r\n\r\n    // Получение состояния флага \"Запомнить меня\" из SharedPreferences\r\n    private boolean isRememberMeChecked() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getBoolean(\"remember_me\", false);\r\n    }\r\n\r\n    // Получение сохраненного email из SharedPreferences\r\n    private String getSavedEmail() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"email\", \"\");\r\n    }\r\n\r\n    // Получение сохраненного password из SharedPreferences\r\n    private String getSavedPassword() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"password\", \"\");\r\n    }\r\n\r\n    // Метод для \"санитарной\" обработки email (удаление символов [@, .])\r\n    public String sanitizeEmail(String email) {\r\n        String sanitizedEmail = email.replaceAll(\"[.@#$\\\\[\\\\]]\", \"\");\r\n        return sanitizedEmail;\r\n    }\r\n\r\n    // Метод для сохранения UID пользователя в SharedPreferences\r\n    private void saveUID(String UID) {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"UID\", UID);\r\n        editor.apply();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/meetyou/SignInActivity.java b/app/src/main/java/com/example/meetyou/SignInActivity.java
--- a/app/src/main/java/com/example/meetyou/SignInActivity.java	(revision 96aba519cbebc5d8d79d0256b613085c014284b6)
+++ b/app/src/main/java/com/example/meetyou/SignInActivity.java	(date 1691346980961)
@@ -136,7 +136,7 @@
                             // Вызов метода для загрузки данных пользователя
                             Users.getUserDataFromFirebase(userUID, new Users.OnUserDataListener() {
                                 @Override
-                                public void onDataLoaded(String userName, String bio) {
+                                public void onDataLoaded(String userName, String bio,String photo1, String photo2, String photo3, String photo4,String photo5) {
                                     // Здесь вы можете обработать полученные данные, если это необходимо.
                                     // Например, отобразить их на экране или выполнить другие действия с этими данными.
                                 }
Index: app/src/main/java/com/example/meetyou/OwnProfileActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.meetyou;\r\n\r\nimport android.Manifest;\r\nimport android.content.ClipData;\r\nimport android.content.ClipboardManager;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.ActivityInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.os.Bundle;\r\nimport android.util.Base64;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.Toast;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport com.example.meetyou.MYFiles.Users;\r\nimport com.example.meetyou.databinding.ActivityOwnProfileBinding;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\nimport java.io.IOException;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class OwnProfileActivity extends AppCompatActivity {\r\n    public String photo1URL;\r\n    public String photo2URL;\r\n    public String photo3URL;\r\n    public String photo4URL;\r\n    public String photo5URL;\r\n    private LocationManager locationManager;\r\n    private LocationListener locationListener;\r\n\r\n    // Объект для привязки макета активности\r\n    ActivityOwnProfileBinding binding;\r\n\r\n    private DatabaseReference mDatabase;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityOwnProfileBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\r\n\r\n        getWindow().setStatusBarColor(ContextCompat.getColor(OwnProfileActivity.this, R.color.main));\r\n\r\n        RelativeLayout imageOverlay = findViewById(R.id.image_overlay);\r\n        ImageView expandedImage = findViewById(R.id.expanded_image);\r\n        // Обработчик кнопки \"Настройки\", переход к активности OptionsActivity\r\n        binding.settingButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n            Intent intent = new Intent(OwnProfileActivity.this, OptionsActivity.class);\r\n            startActivity(intent);\r\n            }\r\n        });\r\n\r\n        // Обработчик кнопки \"Найти\", переход к активности MainActivity и завершение текущей активности\r\n        binding.findButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(OwnProfileActivity.this, MainActivity.class);\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        // Получение LocationManager и установка слушателя для обновления местоположения\r\n        locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n        locationListener = new LocationListener() {\r\n            @Override\r\n            public void onLocationChanged(Location location) {\r\n                updateLocationTextView(location);\r\n            }\r\n\r\n            @Override\r\n            public void onStatusChanged(String provider, int status, Bundle extras) {\r\n                // Метод вызывается при изменении статуса провайдера (GPS или сеть)\r\n            }\r\n\r\n            @Override\r\n            public void onProviderEnabled(String provider) {\r\n                // Метод вызывается, когда пользователь включает провайдер (GPS или сеть)\r\n            }\r\n\r\n            @Override\r\n            public void onProviderDisabled(String provider) {\r\n                // Метод вызывается, когда пользователь отключает провайдер (GPS или сеть)\r\n            }\r\n        };\r\n\r\n        // Проверка наличия разрешения на доступ к местоположению, и запрос разрешения, если требуется\r\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 1);\r\n        }\r\n\r\n\r\n        binding.profilePhoto.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showImageOverlay(binding.profilePhoto, imageOverlay, expandedImage);\r\n            }\r\n        });\r\n\r\n\r\n        binding.image1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showImageOverlay(binding.image1, imageOverlay, expandedImage);\r\n            }\r\n        });\r\n\r\n\r\n        binding.image2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showImageOverlay(binding.image2, imageOverlay, expandedImage);\r\n            }\r\n        });\r\n\r\n\r\n        binding.image3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showImageOverlay(binding.image3, imageOverlay, expandedImage);\r\n            }\r\n        });\r\n\r\n\r\n        binding.image4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showImageOverlay(binding.image4, imageOverlay, expandedImage);\r\n            }\r\n        });\r\n\r\n\r\n        binding.image5.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showImageOverlay(binding.image5, imageOverlay, expandedImage);\r\n            }\r\n        });\r\n\r\n        binding.nameTextView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String textToCopy = binding.nameTextView.getText().toString();\r\n\r\n                ClipboardManager clipboardManager = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);\r\n                ClipData clipData = ClipData.newPlainText(binding.nameTextView.getText().toString(), textToCopy);\r\n                clipboardManager.setPrimaryClip(clipData);\r\n\r\n                Toast.makeText(OwnProfileActivity.this, \"Name was copied in clipboard\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        binding.additionalTextView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String textToCopy = binding.additionalTextView.getText().toString();\r\n\r\n                ClipboardManager clipboardManager = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);\r\n                ClipData clipData = ClipData.newPlainText(binding.additionalTextView.getText().toString(), textToCopy);\r\n                clipboardManager.setPrimaryClip(clipData);\r\n\r\n                Toast.makeText(OwnProfileActivity.this, \"Name was copied in clipboard\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n\r\n        // Получение данных пользователя и отображение их в представлении\r\n        String nameText = getUserName();\r\n        binding.nameTextView.setText(nameText);\r\n        binding.additionalTextView.setText(getUserBio());\r\n        Users.getUserDataFromFirebase(getUID(), new Users.OnUserDataListener() {\r\n            @Override\r\n            public void onDataLoaded(String userName, String bio) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDataLoaded(Users user) {\r\n                // Здесь можно использовать значения photo1, photo2, photo3, photo4, photo5\r\n                photo1URL = user.getPhoto1();\r\n                photo2URL = user.getPhoto2();\r\n                photo3URL = user.getPhoto3();\r\n                photo4URL = user.getPhoto4();\r\n                photo5URL = user.getPhoto5();\r\n            }\r\n\r\n            @Override\r\n            public void onDataNotAvailable() {\r\n                // Обработка случая, если данные не удалось загрузить\r\n            }\r\n        });\r\n\r\n        customPhotoLoadingToClient(\"photo1\", binding.profilePhoto);\r\n        customPhotoLoadingToClient(\"photo1\", binding.image1);\r\n        customPhotoLoadingToClient(\"photo2\", binding.image2);\r\n        customPhotoLoadingToClient(\"photo3\", binding.image3);\r\n        customPhotoLoadingToClient(\"photo4\", binding.image4);\r\n        customPhotoLoadingToClient(\"photo5\", binding.image5);\r\n\r\n        // Проверка наличия разрешения на доступ к местоположению и запрос обновлений местоположения\r\n        if (locationManager != null) {\r\n            if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\r\n                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 10, locationListener);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        // Остановка обновлений местоположения при остановке активности\r\n        if (locationManager != null) {\r\n            locationManager.removeUpdates(locationListener);\r\n        }\r\n    }\r\n\r\n    // Обновление текстового представления с местоположением\r\n    private void updateLocationTextView(Location location) {\r\n        if (location != null) {\r\n            double latitude = location.getLatitude();\r\n            double longitude = location.getLongitude();\r\n\r\n            Geocoder geocoder = new Geocoder(this, Locale.getDefault());\r\n            try {\r\n                List<Address> addresses = geocoder.getFromLocation(latitude, longitude, 1);\r\n                if (!addresses.isEmpty()) {\r\n                    String country = addresses.get(0).getCountryName();\r\n                    String city = addresses.get(0).getLocality();\r\n                    String locationString = country + \", \" + city;\r\n                    binding.locationTextView.setText(locationString);\r\n                }\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Методы для получения данных пользователя из SharedPreferences\r\n    private String getUserBio() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"bio\", \"\");\r\n    }\r\n\r\n//    private int getUserAge() {\r\n//        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", Context.MODE_PRIVATE);\r\n//        return sharedPreferences.getInt(\"age\", 0);\r\n//    }\r\n\r\n    private String getUserName() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"name\", \"\");\r\n    }\r\n\r\n    private boolean getChanges() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getBoolean(\"isSomethingWasChanged\", false);\r\n    }\r\n\r\n    // Преобразование закодированного изображения в Bitmap\r\n    private Bitmap getImageBitmapFromSharedPreferences(String key) {\r\n        byte[] imageByteArray = getImageFromSharedPreferences(key);\r\n        if (imageByteArray != null) {\r\n            return BitmapFactory.decodeByteArray(imageByteArray, 0, imageByteArray.length);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Получение закодированного изображения из SharedPreferences\r\n    private byte[] getImageFromSharedPreferences(String key) {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        String base64Image = sharedPreferences.getString(key, null);\r\n        if (base64Image != null) {\r\n            return Base64.decode(base64Image, Base64.DEFAULT);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Установка флага, указывающего на наличие изменений\r\n    private void setSomethingWasChanged(boolean parameter) {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putBoolean(\"isSomethingWasChanged\", parameter);\r\n        editor.apply();\r\n    }\r\n\r\n    private void customPhotoLoadingToClient(String photoName, ImageView imageView) {\r\n        DatabaseReference Images = FirebaseDatabase.getInstance().getReference(\"Users\").child(getUID()).child(photoName);\r\n        Images.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                String value = snapshot.getValue(String.class);\r\n                // Загрузка изображения с помощью библиотеки Picasso\r\n                Picasso.get().load(value).into(imageView);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                // Обработка ошибки, если загрузка изображения не удалась\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private void showImageOverlay(ImageView imageView, RelativeLayout imageOverlay, ImageView expandedImage) {\r\n        expandedImage.setImageDrawable(imageView.getDrawable());\r\n        imageOverlay.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                imageOverlay.setVisibility(View.GONE);\r\n            }\r\n        });\r\n\r\n        imageOverlay.setVisibility(View.VISIBLE);\r\n        imageOverlay.setAlpha(0f);\r\n        imageOverlay.animate().alpha(1f).setDuration(300).start();\r\n    }\r\n\r\n    // Метод для получения UID пользователя из SharedPreferences\r\n    private String getUID() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"UID\", \"\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/meetyou/OwnProfileActivity.java b/app/src/main/java/com/example/meetyou/OwnProfileActivity.java
--- a/app/src/main/java/com/example/meetyou/OwnProfileActivity.java	(revision 96aba519cbebc5d8d79d0256b613085c014284b6)
+++ b/app/src/main/java/com/example/meetyou/OwnProfileActivity.java	(date 1691346971626)
@@ -196,7 +196,7 @@
         binding.additionalTextView.setText(getUserBio());
         Users.getUserDataFromFirebase(getUID(), new Users.OnUserDataListener() {
             @Override
-            public void onDataLoaded(String userName, String bio) {
+            public void onDataLoaded(String userName, String bio, String photo1, String photo2, String photo3, String photo4,String photo5) {
 
             }
 
Index: app/src/main/java/com/example/meetyou/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.meetyou;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.ActivityInfo;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport com.example.meetyou.MYFiles.NotificationHelper;\r\nimport com.example.meetyou.MYFiles.PhotoAdapter;\r\nimport com.example.meetyou.MYFiles.Users;\r\nimport com.example.meetyou.databinding.ActivityMainBinding;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    FirebaseAuth mAuth;\r\n    @NonNull ActivityMainBinding binding;\r\n    String gender;\r\n    String findGender;\r\n    String findWeight;\r\n    String findHeight;\r\n\r\n    int[] photos = {\r\n            R.drawable.photo_1,\r\n            R.drawable.photo_2,\r\n            R.drawable.photo_3,\r\n            R.drawable.photo_4,\r\n            R.drawable.photo_5\r\n    };\r\n    private int currentPosition = 0;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        getWindow().setStatusBarColor(ContextCompat.getColor(MainActivity.this, R.color.main));\r\n        gender = getGender();\r\n        findGender = getFindGender();\r\n        findWeight = getFindWeight();\r\n        findHeight = getFindHeight();\r\n        binding = ActivityMainBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\r\n\r\n        PhotoAdapter photoAdapter = new PhotoAdapter(photos);\r\n        binding.viewPager.setAdapter(photoAdapter);\r\n\r\n        binding.likebutton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                NotificationHelper.showHeart(MainActivity.this);\r\n            }\r\n        });\r\n\r\n        binding.viewPager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {\r\n            @Override\r\n            public void onPageSelected(int position) {\r\n                currentPosition = position;\r\n                if (currentPosition == 0) {\r\n                    binding.chooseImage.setImageResource(R.drawable.left2choosed);\r\n                } else if (currentPosition == 1) {\r\n                    binding.chooseImage.setImageResource(R.drawable.left1choosed);\r\n                } else if (currentPosition == 2) {\r\n                    binding.chooseImage.setImageResource(R.drawable.centerchoosed);\r\n                } else if (currentPosition == 3) {\r\n                    binding.chooseImage.setImageResource(R.drawable.right1choosed);\r\n                } else {\r\n                    binding.chooseImage.setImageResource(R.drawable.right2choosed);\r\n                }\r\n            }\r\n        });\r\n\r\n        binding.profileButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivity.this, OwnProfileActivity.class);\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        binding.dislikebutton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Users.getRandomUserFromPool(gender,findGender,findHeight,findWeight, new Users.OnUserDataListener() {\r\n                    @Override\r\n                    public void onDataLoaded(String userName, String userBio) {\r\n                        binding.informationTextView.setText(userBio);\r\n                        binding.nameTextView.setText(userName);\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onDataLoaded(Users user) {\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onDataNotAvailable() {\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private String getUserEmail() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"email\", \"\");\r\n    }\r\n\r\n    private String getUserPassword() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"password\", \"\");\r\n    }\r\n\r\n    private String getUID(){\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"UID\", \"\");\r\n    }\r\n    private String getGender(){\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"gender\", \"\");\r\n    }\r\n    private String getFindGender(){\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"findGender\", \"\");\r\n    }\r\n    private String getFindWeight(){\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"findWeight\", \"\");\r\n    }\r\n    private String getFindHeight(){\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"findHeight\", \"\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/meetyou/MainActivity.java b/app/src/main/java/com/example/meetyou/MainActivity.java
--- a/app/src/main/java/com/example/meetyou/MainActivity.java	(revision 96aba519cbebc5d8d79d0256b613085c014284b6)
+++ b/app/src/main/java/com/example/meetyou/MainActivity.java	(date 1691353857215)
@@ -19,7 +19,12 @@
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
 
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
 public class MainActivity extends AppCompatActivity {
+    private List<String> currentUrls = new ArrayList<>();
     FirebaseAuth mAuth;
     @NonNull ActivityMainBinding binding;
     String gender;
@@ -48,8 +53,7 @@
         setContentView(binding.getRoot());
         setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
 
-        PhotoAdapter photoAdapter = new PhotoAdapter(photos);
-        binding.viewPager.setAdapter(photoAdapter);
+
 
         binding.likebutton.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -89,28 +93,17 @@
         binding.dislikebutton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                Users.getRandomUserFromPool(gender,findGender,findHeight,findWeight, new Users.OnUserDataListener() {
-                    @Override
-                    public void onDataLoaded(String userName, String userBio) {
-                        binding.informationTextView.setText(userBio);
-                        binding.nameTextView.setText(userName);
+                findUser();
+            }
+        });
+
+    }
+    @Override
+    public void onStart() {
 
-                    }
-
-                    @Override
-                    public void onDataLoaded(Users user) {
-
-                    }
-
-                    @Override
-                    public void onDataNotAvailable() {
-                    }
-                });
-            }
-        });
-
+        super.onStart();
+        findUser();
     }
-
     private String getUserEmail() {
         SharedPreferences sharedPreferences = getSharedPreferences("UserPrefs", MODE_PRIVATE);
         return sharedPreferences.getString("email", "");
@@ -141,4 +134,29 @@
         SharedPreferences sharedPreferences = getSharedPreferences("UserPrefs", MODE_PRIVATE);
         return sharedPreferences.getString("findHeight", "");
     }
+    private void findUser(){
+        Users.getRandomUserFromPool(gender,findGender,findHeight,findWeight, new Users.OnUserDataListener() {
+            @Override
+            public void onDataLoaded(String userName, String userBio, String photo1, String photo2, String photo3, String photo4,String photo5) {
+                binding.informationTextView.setText(userBio);
+                binding.nameTextView.setText(userName);
+                currentUrls.add(photo1);
+                currentUrls.add(photo2);
+                currentUrls.add(photo3);
+                currentUrls.add(photo4);
+                currentUrls.add(photo5);
+                PhotoAdapter photoAdapter = new PhotoAdapter(currentUrls);
+                binding.viewPager.setAdapter(photoAdapter);
+            }
+
+            @Override
+            public void onDataLoaded(Users user) {
+
+            }
+
+            @Override
+            public void onDataNotAvailable() {
+            }
+        });
+    }
 }
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_30_07_2023_1_55__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_30_07_2023_1_55__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_30_07_2023_1_55__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_30_07_2023_1_55__Changes_.xml	(revision 96aba519cbebc5d8d79d0256b613085c014284b6)
+++ /dev/null	(revision 96aba519cbebc5d8d79d0256b613085c014284b6)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_30_07_2023_1_55_[Changes]" date="1690671375146" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_07_2023_1_55_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 30.07.2023 1:55 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_30_07_2023_1_55_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_30_07_2023_1_55_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_30_07_2023_1_55_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_30_07_2023_1_55_[Changes]/shelved.patch	(revision 96aba519cbebc5d8d79d0256b613085c014284b6)
+++ /dev/null	(revision 96aba519cbebc5d8d79d0256b613085c014284b6)
@@ -1,228 +0,0 @@
-Index: app/src/main/java/com/example/meetyou/SignUpActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.meetyou;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.ActivityInfo;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.util.Patterns;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.example.meetyou.Database.DatabaseHelper;\r\nimport com.example.meetyou.Database.Users;\r\nimport com.example.meetyou.MYFiles.NotificationHelper;\r\nimport com.example.meetyou.databinding.ActivityRegisterationBinding;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.SignInMethodQueryResult;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\npublic class SignUpActivity extends AppCompatActivity {\r\n\r\n    ActivityRegisterationBinding binding;\r\n    DatabaseHelper databaseHelper;\r\n    private FirebaseAuth mAuth;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityRegisterationBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\r\n\r\n        databaseHelper = new DatabaseHelper(this);\r\n\r\n        getWindow().setStatusBarColor(ContextCompat.getColor(SignUpActivity.this, R.color.main));\r\n\r\n        AppCompatButton backButton = findViewById(R.id.go_back_button);\r\n        backButton.setOnClickListener(v -> finish());\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        binding.signUpButton.setOnClickListener(v -> {\r\n            String email = binding.mailText.getText().toString().trim();\r\n            String password = binding.password.getText().toString();\r\n            String confirmPassword = binding.confirmPassword.getText().toString();\r\n\r\n            if (isValidEmail(email)) {\r\n                if (password.length() < 8) {\r\n                    NotificationHelper.showCustomNotification(SignUpActivity.this, null, getString(R.string.wrong_password_lenght_message), getString(R.string.close), 0, 0, 0,0);\r\n                    //Toast.makeText(SignUpActivity.this, R.string.wrong_password_lenght_message, Toast.LENGTH_SHORT).show();\r\n                } else if (!password.matches(\".*[A-Z].*\")) {\r\n                    NotificationHelper.showCustomNotification(SignUpActivity.this, null, getString(R.string.wrong_password_chars_format_message), getString(R.string.close), 0, 0, 0,0);\r\n                    //Toast.makeText(SignUpActivity.this, R.string.wrong_password_chars_format_message, Toast.LENGTH_SHORT).show();\r\n                } else if (password.contains(\" \")) {\r\n                    NotificationHelper.showCustomNotification(SignUpActivity.this, null, getString(R.string.password_has_spaces_message), getString(R.string.close), 0, 0, 0,0);\r\n                    //Toast.makeText(SignUpActivity.this, R.string.password_has_spaces_message, Toast.LENGTH_SHORT).show();\r\n                } else if (!confirmPassword.equals(password)) {\r\n                    NotificationHelper.showCustomNotification(SignUpActivity.this, null, getString(R.string.wrong_confirm_password_message), getString(R.string.close), 0, 0, 0,0);\r\n                    //Toast.makeText(SignUpActivity.this, R.string.wrong_confirm_password_message, Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    //if (!databaseHelper.checkEmail(email)) {\r\n//                        registerUser(email, password);\r\n//                        saveUserEmail(email);\r\n//                        long userID = databaseHelper.insertData(email, password);\r\n                    checkIfEmailIsUsed(email, password);\r\n//                        if (userID != -1) {\r\n//                            saveUserID(userID);\r\n//                            Toast.makeText(SignUpActivity.this, R.string.success_registration_message, Toast.LENGTH_SHORT).show();\r\n//                        } else {\r\n//                            NotificationHelper.showCustomNotification(SignUpActivity.this, null, getString(R.string.registration_error_message), getString(R.string.close), 0, 0, 0,R.color.main);\r\n//                            Toast.makeText(SignUpActivity.this, R.string.registration_error_message, Toast.LENGTH_SHORT).show();\r\n//                        }\r\n                    //} else {\r\n                        //NotificationHelper.showCustomNotification(SignUpActivity.this, null, getString(R.string.email_was_used_message), getString(R.string.close), 0, 0, 0,R.color.main);\r\n                        //Toast.makeText(SignUpActivity.this, R.string.email_was_used_message, Toast.LENGTH_SHORT).show();\r\n                    //}\r\n                }\r\n            } else {\r\n                NotificationHelper.showCustomNotification(SignUpActivity.this, null, getString(R.string.wrong_mail_format_message), getString(R.string.close), 0, 0, 0,R.color.main);\r\n                //Toast.makeText(SignUpActivity.this, R.string.wrong_mail_format_message, Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        FirebaseAuth.getInstance().signOut();\r\n        super.onStart();\r\n        FirebaseUser currentUser = mAuth.getCurrentUser();\r\n        if(currentUser != null){\r\n            currentUser.reload();\r\n        }\r\n    }\r\n\r\n    private void registerUser(String email, String password) {\r\n        mAuth.fetchSignInMethodsForEmail(email).addOnCompleteListener(this, new OnCompleteListener<SignInMethodQueryResult>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<SignInMethodQueryResult> task) {\r\n                if (task.isSuccessful()) {\r\n                    SignInMethodQueryResult result = task.getResult();\r\n                    if (result != null && result.getSignInMethods() != null && result.getSignInMethods().size() > 0) {\r\n                        NotificationHelper.showCustomNotification(SignUpActivity.this, null, getString(R.string.email_was_used_message), getString(R.string.close), 0, 0, 0, R.color.main);\r\n                    } else {\r\n                        mAuth.createUserWithEmailAndPassword(email, password)\r\n                                .addOnCompleteListener(SignUpActivity.this, new OnCompleteListener<AuthResult>() {\r\n                                    @Override\r\n                                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                                        if (task.isSuccessful()) {\r\n                                            Toast.makeText(SignUpActivity.this, R.string.success_registration_message, Toast.LENGTH_SHORT).show();\r\n                                        } else {\r\n                                            NotificationHelper.showCustomNotification(SignUpActivity.this, null, getString(R.string.registration_error_message), getString(R.string.close), 0, 0, 0, R.color.main);\r\n                                        }\r\n                                    }\r\n                                });\r\n                    }\r\n                } else {\r\n                    Log.e(TAG, \"Error checking email existence: \" + task.getException());\r\n                    Toast.makeText(SignUpActivity.this, R.string.registration_error_message, Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void checkIfEmailIsUsed(String email, String password) {\r\n        mAuth.fetchSignInMethodsForEmail(email).addOnCompleteListener(this, new OnCompleteListener<SignInMethodQueryResult>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<SignInMethodQueryResult> task) {\r\n                if (task.isSuccessful()) {\r\n                    SignInMethodQueryResult result = task.getResult();\r\n                    if (result != null && result.getSignInMethods() != null && result.getSignInMethods().size() > 0) {\r\n                        NotificationHelper.showCustomNotification(SignUpActivity.this, null, getString(R.string.email_was_used_message), getString(R.string.close), 0, 0, 0, R.color.main);\r\n                    } else {\r\n                        registerUser(email, password);\r\n                        saveUserEmail(email);\r\n                        Intent intent = new Intent(SignUpActivity.this, ChangeGenderActivity.class);\r\n                        startActivity(intent);\r\n                        finish();\r\n                    }\r\n                } else {\r\n                    Log.e(TAG, \"Error checking email status: \" + task.getException());\r\n                    NotificationHelper.showCustomNotification(SignUpActivity.this, null, getString(R.string.registration_error_message), getString(R.string.close), 0, 0, 0, R.color.main);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private boolean isValidEmail(String email) {\r\n        return Patterns.EMAIL_ADDRESS.matcher(email).matches();\r\n    }\r\n\r\n    private void saveUserInfo(String email, String password) {\r\n        SharedPreferences preferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = preferences.edit();\r\n        editor.putString(\"email\", email);\r\n        editor.putString(\"password\", password);\r\n        editor.apply();\r\n    }\r\n\r\n    private void saveUserID(long userID) {\r\n        SharedPreferences preferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = preferences.edit();\r\n        editor.putLong(\"userID\", userID);\r\n        editor.apply();\r\n    }\r\n\r\n    private void saveUserEmail(String email){\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"UserPrefs\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"userEmail\", email);\r\n        editor.apply();\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/meetyou/SignUpActivity.java b/app/src/main/java/com/example/meetyou/SignUpActivity.java
---- a/app/src/main/java/com/example/meetyou/SignUpActivity.java	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-+++ b/app/src/main/java/com/example/meetyou/SignUpActivity.java	(date 1690498344708)
-@@ -28,7 +28,10 @@
- import com.google.firebase.database.DatabaseReference;
- import com.google.firebase.database.FirebaseDatabase;
- 
-+import java.util.HashMap;
-+
- public class SignUpActivity extends AppCompatActivity {
-+    public String email;
- 
-     ActivityRegisterationBinding binding;
-     DatabaseHelper databaseHelper;
-@@ -51,7 +54,7 @@
-         mAuth = FirebaseAuth.getInstance();
- 
-         binding.signUpButton.setOnClickListener(v -> {
--            String email = binding.mailText.getText().toString().trim();
-+            email = binding.mailText.getText().toString().trim();
-             String password = binding.password.getText().toString();
-             String confirmPassword = binding.confirmPassword.getText().toString();
- 
-@@ -123,7 +126,9 @@
-                                         }
-                                     }
-                                 });
-+                        usertoDataBase(email,1);
-                     }
-+
-                 } else {
-                     Log.e(TAG, "Error checking email existence: " + task.getException());
-                     Toast.makeText(SignUpActivity.this, R.string.registration_error_message, Toast.LENGTH_SHORT).show();
-@@ -131,7 +136,23 @@
-             }
-         });
-     }
-+    private void usertoDataBase(String email, int age) {
-+        HashMap<String, Object> user = new HashMap<>();
-+//        user.put("email", email);
-+        user.put("age", age);
- 
-+        DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReference("Users");
-+        databaseReference.child(email).setValue(user).addOnCompleteListener(new OnCompleteListener<Void>() {
-+            @Override
-+            public void onComplete(@NonNull Task<Void> task) {
-+                if (task.isSuccessful()) {
-+
-+                } else {
-+                    Toast.makeText(SignUpActivity.this, "Failed to save data", Toast.LENGTH_SHORT).show();
-+                }
-+            }
-+        });
-+    }
-     private void checkIfEmailIsUsed(String email, String password) {
-         mAuth.fetchSignInMethodsForEmail(email).addOnCompleteListener(this, new OnCompleteListener<SignInMethodQueryResult>() {
-             @Override
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
-deleted file mode 100644
---- a/.idea/misc.xml	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-+++ /dev/null	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-@@ -1,16 +0,0 @@
--<project version="4">
--  <component name="ExternalStorageConfigurationManager" enabled="true" />
--  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
--    <output url="file://$PROJECT_DIR$/build/classes" />
--  </component>
--  <component name="ProjectType">
--    <option name="id" value="Android" />
--  </component>
--  <component name="VisualizationToolProject">
--    <option name="state">
--      <ProjectState>
--        <option name="scale" value="0.5" />
--      </ProjectState>
--    </option>
--  </component>
--</project>
-\ No newline at end of file
-Index: .idea/.gitignore
-===================================================================
-diff --git a/.idea/.gitignore b/.idea/.gitignore
-deleted file mode 100644
---- a/.idea/.gitignore	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-+++ /dev/null	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-@@ -1,3 +0,0 @@
--# Default ignored files
--/shelf/
--/workspace.xml
-Index: .idea/compiler.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/compiler.xml b/.idea/compiler.xml
-deleted file mode 100644
---- a/.idea/compiler.xml	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-+++ /dev/null	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-@@ -1,6 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<project version="4">
--  <component name="CompilerConfiguration">
--    <bytecodeTargetLevel target="17" />
--  </component>
--</project>
-\ No newline at end of file
-Index: .idea/gradle.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/gradle.xml b/.idea/gradle.xml
-deleted file mode 100644
---- a/.idea/gradle.xml	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-+++ /dev/null	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-@@ -1,20 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<project version="4">
--  <component name="GradleMigrationSettings" migrationVersion="1" />
--  <component name="GradleSettings">
--    <option name="linkedExternalProjectsSettings">
--      <GradleProjectSettings>
--        <option name="testRunner" value="GRADLE" />
--        <option name="distributionType" value="DEFAULT_WRAPPED" />
--        <option name="externalProjectPath" value="$PROJECT_DIR$" />
--        <option name="gradleJvm" value="jbr-17" />
--        <option name="modules">
--          <set>
--            <option value="$PROJECT_DIR$" />
--            <option value="$PROJECT_DIR$/app" />
--          </set>
--        </option>
--      </GradleProjectSettings>
--    </option>
--  </component>
--</project>
-\ No newline at end of file
-Index: .idea/git_toolbox_prj.xml
-===================================================================
-diff --git a/.idea/git_toolbox_prj.xml b/.idea/git_toolbox_prj.xml
-deleted file mode 100644
---- a/.idea/git_toolbox_prj.xml	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-+++ /dev/null	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-@@ -1,15 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<project version="4">
--  <component name="GitToolBoxProjectSettings">
--    <option name="commitMessageIssueKeyValidationOverride">
--      <BoolValueOverride>
--        <option name="enabled" value="true" />
--      </BoolValueOverride>
--    </option>
--    <option name="commitMessageValidationEnabledOverride">
--      <BoolValueOverride>
--        <option name="enabled" value="true" />
--      </BoolValueOverride>
--    </option>
--  </component>
--</project>
-\ No newline at end of file
-Index: build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>buildscript {\r\n    dependencies {\r\n        classpath 'com.google.gms:google-services:4.3.15'\r\n        classpath \"com.android.tools.build:gradle:4.1.3\"\r\n    }\r\n}// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\n    id 'com.google.gms.google-services' version '4.3.15' apply false\r\n    id 'com.android.application' version '8.1.0' apply false\r\n    id 'com.android.library' version '8.1.0' apply false\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/build.gradle b/build.gradle
---- a/build.gradle	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-+++ b/build.gradle	(date 1690496805873)
-@@ -1,6 +1,5 @@
- buildscript {
-     dependencies {
--        classpath 'com.google.gms:google-services:4.3.15'
-         classpath "com.android.tools.build:gradle:4.1.3"
-     }
- }// Top-level build file where you can add configuration options common to all sub-projects/modules.
-Index: app/src/main/res/layout/activity_main.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_marginTop=\"42dp\"\r\n        android:layout_marginBottom=\"90dp\">\r\n        <androidx.viewpager2.widget.ViewPager2\r\n            android:id=\"@+id/viewPager\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\" />\r\n\r\n        <RelativeLayout\r\n            xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"200dp\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:background=\"@drawable/description_header_background\"\r\n            android:padding=\"16dp\">\r\n\r\n            <!-- Name Space -->\r\n            <RelativeLayout\r\n                android:id=\"@+id/nameSpaceLayout\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_alignParentBottom=\"true\"\r\n                android:layout_marginBottom=\"100dp\">\r\n\r\n                <View\r\n                    android:id=\"@+id/genderColor2View\"\r\n                    android:layout_width=\"2.2dp\"\r\n                    android:layout_height=\"50dp\"\r\n                    android:background=\"#e337ff\"\r\n                    android:layout_marginLeft=\"10dp\"/>\r\n\r\n                <TextView\r\n                    android:id=\"@+id/name_text_view\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"20dp\"\r\n                    android:layout_marginTop=\"5dp\"\r\n                    android:layout_marginBottom=\"5dp\"\r\n                    android:text=\"Nick_Name\"\r\n                    android:textColor=\"#ffffff\"\r\n                    android:textSize=\"18sp\"/>\r\n                <TextView\r\n                    android:id=\"@+id/location_text_view\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"20dp\"\r\n                    android:layout_marginTop=\"25dp\"\r\n                    android:layout_marginBottom=\"5dp\"\r\n                    android:text=\"Russia, Moscow\"\r\n                    android:textColor=\"#9fffffff\"\r\n                    android:textSize=\"14sp\"/>\r\n            </RelativeLayout>\r\n\r\n            <!-- Additional Space -->\r\n            <RelativeLayout\r\n                android:id=\"@+id/additionalSpaceLayout\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"75dp\"\r\n                android:layout_alignParentBottom=\"true\"\r\n                android:layout_marginBottom=\"15dp\"\r\n                android:layout_above=\"@+id/nameSpaceLayout\">\r\n\r\n                <View\r\n                    android:id=\"@+id/genderColorView\"\r\n                    android:layout_width=\"2.2dp\"\r\n                    android:layout_height=\"75dp\"\r\n                    android:layout_alignParentBottom=\"true\"\r\n                    android:background=\"#e337ff\"\r\n                    android:layout_marginLeft=\"10dp\"/>\r\n\r\n                <TextView\r\n                    android:id=\"@+id/informationTextView\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginBottom=\"0dp\"\r\n                    android:layout_marginTop=\"5dp\"\r\n                    android:layout_marginLeft=\"20dp\"\r\n                    android:layout_marginRight=\"10dp\"\r\n                    android:gravity=\"left\"\r\n                    android:text=\"Information, hobbies, city, what do i like and many others.\\nI love chocolate cookies and National Geographic, if u understood what i’ve said rn write me in DM\"\r\n                    android:textColor=\"#ffffff\"\r\n                    android:textSize=\"14sp\"/>\r\n            </RelativeLayout>\r\n\r\n        </RelativeLayout>\r\n    </RelativeLayout>\r\n\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/bottom_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"90dp\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_gravity=\"bottom\"\r\n        android:layout_marginBottom=\"0dp\"\r\n        android:background=\"#000000\"\r\n        android:gravity=\"bottom\">\r\n\r\n\r\n\r\n        <FrameLayout\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\">\r\n\r\n            <View\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"@dimen/bottomline\"\r\n                android:background=\"#FFFFFF\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/imageView5\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_margin=\"20dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:scaleType=\"centerInside\"\r\n                app:srcCompat=\"@drawable/gobackbutton\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/gobackbutton\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:background=\"@android:color/transparent\" />\r\n\r\n        </FrameLayout>\r\n\r\n        <FrameLayout\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\">\r\n\r\n            <View\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"@dimen/bottomline\"\r\n                android:background=\"#FFFFFF\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/imageView6\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_margin=\"20dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:scaleType=\"centerInside\"\r\n                app:srcCompat=\"@drawable/dislikebutton\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/dislikebutton\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:background=\"@android:color/transparent\" />\r\n\r\n        </FrameLayout>\r\n\r\n        <FrameLayout\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\">\r\n\r\n            <View\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"@dimen/bottomline\"\r\n                android:background=\"#FFFFFF\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/imageView7\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_margin=\"10dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:scaleType=\"centerInside\"\r\n                app:srcCompat=\"@drawable/megasbutton\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/megasbutton\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:background=\"@android:color/transparent\" />\r\n\r\n        </FrameLayout>\r\n\r\n        <FrameLayout\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\">\r\n\r\n            <View\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"@dimen/bottomline\"\r\n                android:background=\"#FFFFFF\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/imageView8\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_margin=\"20dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:scaleType=\"centerInside\"\r\n                app:srcCompat=\"@drawable/likebutton\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/likebutton\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:background=\"@android:color/transparent\" />\r\n\r\n        </FrameLayout>\r\n\r\n        <FrameLayout\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\">\r\n\r\n            <View\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"@dimen/bottomline\"\r\n                android:background=\"#FFFFFF\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/imageView9\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_margin=\"20dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:scaleType=\"centerInside\"\r\n                app:srcCompat=\"@drawable/powerupbutton\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/boostbutton\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:background=\"@android:color/transparent\" />\r\n\r\n        </FrameLayout>\r\n    </LinearLayout>\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"25dp\"\r\n        android:layout_alignTop=\"@+id/main_header\"\r\n        android:layout_marginTop=\"42dp\"\r\n        android:gravity=\"center_horizontal\"\r\n        android:background=\"@drawable/gradient_shadow\">\r\n        <ImageView\r\n            android:id=\"@+id/choose_image\"\r\n            android:layout_marginRight=\"120dp\"\r\n            android:layout_marginLeft=\"120dp\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:src=\"@drawable/nochoosed\"/>\r\n    </RelativeLayout>\r\n\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/main_header\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"42dp\"\r\n        android:orientation=\"horizontal\"\r\n        android:elevation=\"15dp\"\r\n        android:background=\"@android:color/white\">\r\n        <TextView\r\n            android:id=\"@+id/meet\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_marginLeft=\"25dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:layout_alignParentLeft=\"true\"\r\n            android:text=\"meet\"\r\n            android:textSize=\"16sp\"\r\n            android:textStyle=\"bold\"\r\n            android:textColor=\"#2C59CC\"/>\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_marginLeft=\"40dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:layout_alignLeft=\"@+id/meet\"\r\n            android:text=\"you\"\r\n            android:textSize=\"16sp\"\r\n            android:textColor=\"#000000\"\r\n            android:paddingLeft=\"5dp\"\r\n            android:paddingRight=\"16dp\"/>\r\n        <FrameLayout\r\n            android:layout_width=\"28dp\"\r\n            android:layout_height=\"42dp\"\r\n            android:layout_alignRight=\"@+id/profile_layout\"\r\n            android:layout_marginRight=\"45dp\"\r\n            android:layout_marginLeft=\"5dp\">\r\n            <ImageView\r\n                android:id=\"@+id/imageView2\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:scaleType=\"fitCenter\"\r\n                app:srcCompat=\"@drawable/messagerbutton\" />\r\n            <Button\r\n                android:id=\"@+id/message_button\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:background=\"@android:color/transparent\" />\r\n        </FrameLayout>\r\n        <FrameLayout\r\n            android:id=\"@+id/profile_layout\"\r\n            android:layout_width=\"28dp\"\r\n            android:layout_height=\"42dp\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_marginLeft=\"5dp\"\r\n            android:layout_marginRight=\"15dp\">\r\n            <ImageView\r\n                android:id=\"@+id/imageView4\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:scaleType=\"fitCenter\"\r\n                app:srcCompat=\"@drawable/profilebutton\" />\r\n            <Button\r\n                android:id=\"@+id/profile_button\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:background=\"@android:color/transparent\"\r\n                />\r\n        </FrameLayout>\r\n    </RelativeLayout>\r\n</RelativeLayout>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
---- a/app/src/main/res/layout/activity_main.xml	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-+++ b/app/src/main/res/layout/activity_main.xml	(date 1690496325241)
-@@ -9,8 +9,8 @@
-     <RelativeLayout
-         android:layout_width="match_parent"
-         android:layout_height="match_parent"
--        android:layout_marginTop="42dp"
--        android:layout_marginBottom="90dp">
-+        android:layout_marginBottom="90dp"
-+        android:layout_marginTop="42dp">
-         <androidx.viewpager2.widget.ViewPager2
-             android:id="@+id/viewPager"
-             android:layout_width="match_parent"
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.meetyou'\r\n    compileSdk 33\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.meetyou\"\r\n        minSdk 24\r\n        targetSdk 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    buildFeatures{\r\n        viewBinding true\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.6.1'\r\n    implementation 'com.google.android.material:material:1.5.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'net.sourceforge.jtds:jtds:1.3.1'\r\n    implementation platform('com.google.firebase:firebase-bom:32.2.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation 'com.google.firebase:firebase-database:20.2.2'\r\n    implementation 'com.google.firebase:firebase-auth:22.1.0'\r\n    implementation 'androidx.viewpager2:viewpager2:1.0.0'\r\n    implementation 'com.makeramen:roundedimageview:2.3.0'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/build.gradle b/app/build.gradle
---- a/app/build.gradle	(revision 5e9b85277aa22ae5597e4f2d5e882cb0cc29978b)
-+++ b/app/build.gradle	(date 1690496325214)
-@@ -47,4 +47,6 @@
-     testImplementation 'junit:junit:4.13.2'
-     androidTestImplementation 'androidx.test.ext:junit:1.1.5'
-     androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
-+
-+
- }
-\ No newline at end of file
